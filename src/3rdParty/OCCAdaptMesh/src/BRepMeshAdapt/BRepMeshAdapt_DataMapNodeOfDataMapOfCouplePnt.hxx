// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _BRepMeshAdapt_DataMapNodeOfDataMapOfCouplePnt_HeaderFile
#define _BRepMeshAdapt_DataMapNodeOfDataMapOfCouplePnt_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_BRepMeshAdapt_DataMapNodeOfDataMapOfCouplePnt_HeaderFile
#include <Handle_BRepMeshAdapt_DataMapNodeOfDataMapOfCouplePnt.hxx>
#endif

#ifndef _MeshShape_Couple_HeaderFile
#include <MeshShape_Couple.hxx>
#endif
#ifndef _gp_Pnt_HeaderFile
#include <gp_Pnt.hxx>
#endif
#ifndef _TCollection_MapNode_HeaderFile
#include <TCollection_MapNode.hxx>
#endif
#ifndef _TCollection_MapNodePtr_HeaderFile
#include <TCollection_MapNodePtr.hxx>
#endif
class MeshShape_Couple;
class gp_Pnt;
class MeshShape_CoupleHasher;
class BRepMeshAdapt_DataMapOfCouplePnt;
class BRepMeshAdapt_DataMapIteratorOfDataMapOfCouplePnt;



class BRepMeshAdapt_DataMapNodeOfDataMapOfCouplePnt : public TCollection_MapNode {

public:
 // Methods PUBLIC
 // 

BRepMeshAdapt_DataMapNodeOfDataMapOfCouplePnt(const MeshShape_Couple& K,const gp_Pnt& I,const TCollection_MapNodePtr& n);

  MeshShape_Couple& Key() const;

  gp_Pnt& Value() const;
//Standard_EXPORT ~BRepMeshAdapt_DataMapNodeOfDataMapOfCouplePnt();




 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //
MeshShape_Couple myKey;
gp_Pnt myValue;


};

#define TheKey MeshShape_Couple
#define TheKey_hxx <MeshShape_Couple.hxx>
#define TheItem gp_Pnt
#define TheItem_hxx <gp_Pnt.hxx>
#define Hasher MeshShape_CoupleHasher
#define Hasher_hxx <MeshShape_CoupleHasher.hxx>
#define TCollection_DataMapNode BRepMeshAdapt_DataMapNodeOfDataMapOfCouplePnt
#define TCollection_DataMapNode_hxx <BRepMeshAdapt_DataMapNodeOfDataMapOfCouplePnt.hxx>
#define TCollection_DataMapIterator BRepMeshAdapt_DataMapIteratorOfDataMapOfCouplePnt
#define TCollection_DataMapIterator_hxx <BRepMeshAdapt_DataMapIteratorOfDataMapOfCouplePnt.hxx>
#define Handle_TCollection_DataMapNode Handle_BRepMeshAdapt_DataMapNodeOfDataMapOfCouplePnt
#define TCollection_DataMapNode_Type_() BRepMeshAdapt_DataMapNodeOfDataMapOfCouplePnt_Type_()
#define TCollection_DataMap BRepMeshAdapt_DataMapOfCouplePnt
#define TCollection_DataMap_hxx <BRepMeshAdapt_DataMapOfCouplePnt.hxx>

#include <TCollection_DataMapNode.lxx>

#undef TheKey
#undef TheKey_hxx
#undef TheItem
#undef TheItem_hxx
#undef Hasher
#undef Hasher_hxx
#undef TCollection_DataMapNode
#undef TCollection_DataMapNode_hxx
#undef TCollection_DataMapIterator
#undef TCollection_DataMapIterator_hxx
#undef Handle_TCollection_DataMapNode
#undef TCollection_DataMapNode_Type_
#undef TCollection_DataMap
#undef TCollection_DataMap_hxx


// other Inline functions and methods (like "C++: function call" methods)
//


#endif
