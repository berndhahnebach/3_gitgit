// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _BRepMeshAdapt_Classifier_HeaderFile
#define _BRepMeshAdapt_Classifier_HeaderFile

#ifndef _BRepTopAdaptor_SeqOfPtr_HeaderFile
#include <BRepTopAdaptor_SeqOfPtr.hxx>
#endif
#ifndef _TColStd_SequenceOfInteger_HeaderFile
#include <TColStd_SequenceOfInteger.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _TopoDS_Face_HeaderFile
#include <TopoDS_Face.hxx>
#endif
#ifndef _BRepMeshAdapt_Status_HeaderFile
#include <BRepMeshAdapt_Status.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _TColgp_SequenceOfPnt2d_HeaderFile
#include <TColgp_SequenceOfPnt2d.hxx>
#endif
#ifndef _TopAbs_State_HeaderFile
#include <TopAbs_State.hxx>
#endif

#ifndef _TriangleAdapt_Parameters_HeaderFile
#include <TriangleAdapt_Parameters.h>
#endif

class TopoDS_Face;
class MeshShape_DataMapOfShapeListOfTransient;
class TColStd_IndexedMapOfInteger;
class BRepMeshAdapt_IndexedMapOfVertex;
class gp_Pnt2d;
class TColgp_SequenceOfPnt2d;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif


class BRepMeshAdapt_Classifier  {

public:

    void* operator new(size_t,void* anAddress) 
      {
        return anAddress;
      }
    void* operator new(size_t size) 
      { 
        return Standard::Allocate(size); 
      }
    void  operator delete(void *anAddress) 
      { 
        if (anAddress) Standard::Free((Standard_Address&)anAddress); 
      }
 // Methods PUBLIC
 // 


Standard_EXPORT BRepMeshAdapt_Classifier(const TopoDS_Face& F,
										 const Standard_Real Tol,
										 const MeshShape_DataMapOfShapeListOfTransient& edges,
										 const TColStd_IndexedMapOfInteger& themap,
										 const BRepMeshAdapt_IndexedMapOfVertex& Str,
										 const Standard_Real Umin,
										 const Standard_Real Umax,
										 const Standard_Real Vmin,
										 const Standard_Real Vmax,
										 const TriangleAdapt_Parameters& triangleParameters);
   

void SetTriangleParameters(const TriangleAdapt_Parameters& params)
{
    myTriangleParameters = params;
}
const TriangleAdapt_Parameters& GetTriangleParameters() const
{
    return myTriangleParameters;
}


Standard_EXPORT   TopAbs_State Perform(const gp_Pnt2d& Puv) const;

  BRepMeshAdapt_Status State() const;

 const TColgp_SequenceOfPnt2d& Holes() const;

  Standard_Boolean NaturalRestriction() const;


Standard_EXPORT   void Destroy() ;
~BRepMeshAdapt_Classifier()
{
  Destroy();
}






protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


Standard_EXPORT   void AnalizeWire(const TColgp_SequenceOfPnt2d& theSeqPnt2d,const Standard_Real Umin,const Standard_Real Umax,const Standard_Real Vmin,const Standard_Real Vmax) ;


 // Fields PRIVATE
 //
     
TriangleAdapt_Parameters myTriangleParameters;
BRepTopAdaptor_SeqOfPtr TabClass;
TColStd_SequenceOfInteger TabOrien;
Standard_Real Toluv;
TopoDS_Face Face;
Standard_Real U1;
Standard_Real V1;
Standard_Real U2;
Standard_Real V2;
BRepMeshAdapt_Status myState;
Standard_Boolean isnatural;
TColgp_SequenceOfPnt2d myholes;


};


#include <BRepMeshAdapt_Classifier.lxx>



// other Inline functions and methods (like "C++: function call" methods)
//


#endif
