// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _BRepMeshAdapt_SelectorOfDataStructureOfDelaun_HeaderFile
#define _BRepMeshAdapt_SelectorOfDataStructureOfDelaun_HeaderFile

#ifndef _Handle_BRepMeshAdapt_DataStructureOfDelaun_HeaderFile
#include <Handle_BRepMeshAdapt_DataStructureOfDelaun.hxx>
#endif
#ifndef _TColStd_MapOfInteger_HeaderFile
#include <TColStd_MapOfInteger.hxx>
#endif
#ifndef _Handle_BRepMeshAdapt_IndexedDataMapNodeOfIDMapOfNodeOfDataStructureOfDelaun_HeaderFile
#include <Handle_BRepMeshAdapt_IndexedDataMapNodeOfIDMapOfNodeOfDataStructureOfDelaun.hxx>
#endif
#ifndef _Handle_BRepMeshAdapt_IndexedDataMapNodeOfIDMapOfLinkOfDataStructureOfDelaun_HeaderFile
#include <Handle_BRepMeshAdapt_IndexedDataMapNodeOfIDMapOfLinkOfDataStructureOfDelaun.hxx>
#endif
#ifndef _Handle_BRepMeshAdapt_IndexedMapNodeOfIMapOfElementOfDataStructureOfDelaun_HeaderFile
#include <Handle_BRepMeshAdapt_IndexedMapNodeOfIMapOfElementOfDataStructureOfDelaun.hxx>
#endif
#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
class BRepMeshAdapt_DataStructureOfDelaun;
class BRepMeshAdapt_Vertex;
class BRepMeshAdapt_Edge;
class BRepMeshAdapt_Triangle;
class BRepMeshAdapt_NodeHasherOfDataStructureOfDelaun;
class BRepMeshAdapt_LinkHasherOfDataStructureOfDelaun;
class BRepMeshAdapt_ElemHasherOfDataStructureOfDelaun;
class BRepMeshAdapt_IDMapOfNodeOfDataStructureOfDelaun;
class BRepMeshAdapt_IndexedDataMapNodeOfIDMapOfNodeOfDataStructureOfDelaun;
class BRepMeshAdapt_IDMapOfLinkOfDataStructureOfDelaun;
class BRepMeshAdapt_IndexedDataMapNodeOfIDMapOfLinkOfDataStructureOfDelaun;
class BRepMeshAdapt_IMapOfElementOfDataStructureOfDelaun;
class BRepMeshAdapt_IndexedMapNodeOfIMapOfElementOfDataStructureOfDelaun;
class TColStd_MapOfInteger;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif


class BRepMeshAdapt_SelectorOfDataStructureOfDelaun  {

public:

    void* operator new(size_t,void* anAddress) 
      {
        return anAddress;
      }
    void* operator new(size_t size) 
      { 
        return Standard::Allocate(size); 
      }
    void  operator delete(void *anAddress) 
      { 
        if (anAddress) Standard::Free((Standard_Address&)anAddress); 
      }
 // Methods PUBLIC
 // 


Standard_EXPORT BRepMeshAdapt_SelectorOfDataStructureOfDelaun();


Standard_EXPORT BRepMeshAdapt_SelectorOfDataStructureOfDelaun(const Handle(BRepMeshAdapt_DataStructureOfDelaun)& theMesh);


Standard_EXPORT   void Initialize(const Handle(BRepMeshAdapt_DataStructureOfDelaun)& theMesh) ;


Standard_EXPORT   void NeighboursOf(const BRepMeshAdapt_Vertex& theNode) ;


Standard_EXPORT   void NeighboursOfNode(const Standard_Integer indexNode) ;


Standard_EXPORT   void NeighboursOf(const BRepMeshAdapt_Edge& theLink) ;


Standard_EXPORT   void NeighboursOfLink(const Standard_Integer indexLink) ;


Standard_EXPORT   void NeighboursOf(const BRepMeshAdapt_Triangle& theElem) ;


Standard_EXPORT   void NeighboursOfElement(const Standard_Integer indexElem) ;


Standard_EXPORT   void NeighboursByEdgeOf(const BRepMeshAdapt_Triangle& theElem) ;


Standard_EXPORT   void NeighboursOf(const BRepMeshAdapt_SelectorOfDataStructureOfDelaun& theSelector) ;


Standard_EXPORT   void AddNeighbours() ;


Standard_EXPORT  const TColStd_MapOfInteger& Nodes() const;


Standard_EXPORT  const TColStd_MapOfInteger& Links() const;


Standard_EXPORT  const TColStd_MapOfInteger& Elements() const;


Standard_EXPORT  const TColStd_MapOfInteger& FrontierLinks() const;





protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //
Handle_BRepMeshAdapt_DataStructureOfDelaun myMesh;
TColStd_MapOfInteger myNodes;
TColStd_MapOfInteger myLinks;
TColStd_MapOfInteger myElements;
TColStd_MapOfInteger myFrontier;


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
