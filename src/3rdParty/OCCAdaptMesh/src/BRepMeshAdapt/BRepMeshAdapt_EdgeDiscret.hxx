// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _BRepMeshAdapt_EdgeDiscret_HeaderFile
#define _BRepMeshAdapt_EdgeDiscret_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_BRepMeshAdapt_EdgeDiscret_HeaderFile
#include <Handle_BRepMeshAdapt_EdgeDiscret.hxx>
#endif

#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _TColStd_SequenceOfReal_HeaderFile
#include <TColStd_SequenceOfReal.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
class TopoDS_Edge;
class BRepMeshAdapt_ListOfSurfaceGrid;
class TColStd_SequenceOfReal;



class BRepMeshAdapt_EdgeDiscret : public MMgt_TShared {

public:
 // Methods PUBLIC
 // 


Standard_EXPORT BRepMeshAdapt_EdgeDiscret();


Standard_EXPORT BRepMeshAdapt_EdgeDiscret(const TopoDS_Edge& E,const BRepMeshAdapt_ListOfSurfaceGrid& L,const Standard_Real D,const Standard_Real An);


Standard_EXPORT  const TColStd_SequenceOfReal& Parameters() const;
//Standard_EXPORT ~BRepMeshAdapt_EdgeDiscret();




 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


Standard_EXPORT   void SortParameters(const TColStd_SequenceOfReal& P) ;


 // Fields PRIVATE
 //
Standard_Real mydeflection;
Standard_Real myangle;
TColStd_SequenceOfReal myparameters;


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
