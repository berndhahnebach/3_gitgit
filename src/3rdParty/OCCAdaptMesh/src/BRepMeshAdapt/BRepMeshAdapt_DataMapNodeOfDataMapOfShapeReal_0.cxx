// File generated by CPPExt (Transient)
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#include <BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal.hxx>

#ifndef _Standard_TypeMismatch_HeaderFile
#include <Standard_TypeMismatch.hxx>
#endif

#ifndef _TopoDS_Shape_HeaderFile
#include <TopoDS_Shape.hxx>
#endif
#ifndef _TopTools_ShapeMapHasher_HeaderFile
#include <TopTools_ShapeMapHasher.hxx>
#endif
#ifndef _BRepMeshAdapt_DataMapOfShapeReal_HeaderFile
#include <BRepMeshAdapt_DataMapOfShapeReal.hxx>
#endif
#ifndef _BRepMeshAdapt_DataMapIteratorOfDataMapOfShapeReal_HeaderFile
#include <BRepMeshAdapt_DataMapIteratorOfDataMapOfShapeReal.hxx>
#endif
//BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal::~BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal() {}
 


Standard_EXPORT Handle_Standard_Type& BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal_Type_()
{

    static Handle_Standard_Type aType1 = STANDARD_TYPE(TCollection_MapNode);
  static Handle_Standard_Type aType2 = STANDARD_TYPE(MMgt_TShared);
  static Handle_Standard_Type aType3 = STANDARD_TYPE(Standard_Transient);
 

  static Handle_Standard_Transient _Ancestors[]= {aType1,aType2,aType3,NULL};
  static Handle_Standard_Type _aType = new Standard_Type("BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal",
			                                 sizeof(BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal),
			                                 1,
			                                 (Standard_Address)_Ancestors,
			                                 (Standard_Address)NULL);

  return _aType;
}


// DownCast method
//   allow safe downcasting
//
const Handle(BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal) Handle(BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal)::DownCast(const Handle(Standard_Transient)& AnObject) 
{
  Handle(BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal) _anOtherObject;

  if (!AnObject.IsNull()) {
     if (AnObject->IsKind(STANDARD_TYPE(BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal))) {
       _anOtherObject = Handle(BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal)((Handle(BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal)&)AnObject);
     }
  }

  return _anOtherObject ;
}
const Handle(Standard_Type)& BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal::DynamicType() const 
{ 
  return STANDARD_TYPE(BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal) ; 
}
//Standard_Boolean BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal::IsKind(const Handle(Standard_Type)& AType) const 
//{ 
//  return (STANDARD_TYPE(BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal) == AType || TCollection_MapNode::IsKind(AType)); 
//}
//Handle_BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal::~Handle_BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal() {}
#define TheKey TopoDS_Shape
#define TheKey_hxx <TopoDS_Shape.hxx>
#define TheItem Standard_Real
#define TheItem_hxx <Standard_Real.hxx>
#define Hasher TopTools_ShapeMapHasher
#define Hasher_hxx <TopTools_ShapeMapHasher.hxx>
#define TCollection_DataMapNode BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal
#define TCollection_DataMapNode_hxx <BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal.hxx>
#define TCollection_DataMapIterator BRepMeshAdapt_DataMapIteratorOfDataMapOfShapeReal
#define TCollection_DataMapIterator_hxx <BRepMeshAdapt_DataMapIteratorOfDataMapOfShapeReal.hxx>
#define Handle_TCollection_DataMapNode Handle_BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal
#define TCollection_DataMapNode_Type_() BRepMeshAdapt_DataMapNodeOfDataMapOfShapeReal_Type_()
#define TCollection_DataMap BRepMeshAdapt_DataMapOfShapeReal
#define TCollection_DataMap_hxx <BRepMeshAdapt_DataMapOfShapeReal.hxx>
#include <TCollection_DataMapNode.gxx>

