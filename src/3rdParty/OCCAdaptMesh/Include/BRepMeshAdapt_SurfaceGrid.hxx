// File generated by CPPExt (Transient)
//
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _BRepMeshAdapt_SurfaceGrid_HeaderFile
#define _BRepMeshAdapt_SurfaceGrid_HeaderFile

#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Handle_BRepMeshAdapt_SurfaceGrid_HeaderFile
#include <Handle_BRepMeshAdapt_SurfaceGrid.hxx>
#endif

#ifndef _TopoDS_Face_HeaderFile
#include <TopoDS_Face.hxx>
#endif
#ifndef _Handle_BRepAdaptor_HSurface_HeaderFile
#include <Handle_BRepAdaptor_HSurface.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
#ifndef _TColgp_SequenceOfPnt_HeaderFile
#include <TColgp_SequenceOfPnt.hxx>
#endif
#ifndef _TColgp_SequenceOfPnt2d_HeaderFile
#include <TColgp_SequenceOfPnt2d.hxx>
#endif
#ifndef _TColStd_SequenceOfReal_HeaderFile
#include <TColStd_SequenceOfReal.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _BRepMeshAdapt_Status_HeaderFile
#include <BRepMeshAdapt_Status.hxx>
#endif
#ifndef _MMgt_TShared_HeaderFile
#include <MMgt_TShared.hxx>
#endif
class BRepAdaptor_HSurface;
class TopoDS_Face;
class BRepMeshAdapt_Classifier;
class TColgp_SequenceOfPnt;
class TColgp_SequenceOfPnt2d;
class TColStd_SequenceOfReal;



class BRepMeshAdapt_SurfaceGrid : public MMgt_TShared {

public:
 // Methods PUBLIC
 // 


Standard_EXPORT BRepMeshAdapt_SurfaceGrid(const TopoDS_Face& F,const Standard_Real def,const Standard_Real Ang);


Standard_EXPORT   void Perform(const BRepMeshAdapt_Classifier& cl) ;


Standard_EXPORT   void SetEquilateral() ;


Standard_EXPORT   void SetTrianglesOnPlane() ;


Standard_EXPORT   void SetEdgeDimension(const Standard_Real D) ;


Standard_EXPORT  const TColgp_SequenceOfPnt& Points() const;


Standard_EXPORT  const TColgp_SequenceOfPnt2d& Parameters() const;


Standard_EXPORT   Standard_Real DeltaX() const;


Standard_EXPORT   Standard_Real DeltaY() const;


Standard_EXPORT   BRepMeshAdapt_Status Error() const;


Standard_EXPORT  const TColStd_SequenceOfReal& UParameters() const;


Standard_EXPORT  const TColStd_SequenceOfReal& VParameters() const;


Standard_EXPORT   Handle_BRepAdaptor_HSurface Surface() const;


Standard_EXPORT   TopoDS_Face Face() const;


Standard_EXPORT   void Bounds(Standard_Real& Umin,Standard_Real& Umax,Standard_Real& Vmin,Standard_Real& Vmax) const;
//Standard_EXPORT ~BRepMeshAdapt_SurfaceGrid();




 // Type management
 //
 Standard_EXPORT const Handle(Standard_Type)& DynamicType() const;
 //Standard_EXPORT Standard_Boolean	       IsKind(const Handle(Standard_Type)&) const;

protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


Standard_EXPORT   void SetDelta() ;


Standard_EXPORT   void Perform() ;


 // Fields PRIVATE
 //
TopoDS_Face myFace;
Handle_BRepAdaptor_HSurface mySurface;
Standard_Real myDeflection;
Standard_Real myangle;
Standard_Real mydeltaX;
Standard_Real mydeltaY;
TColgp_SequenceOfPnt myPoints;
TColgp_SequenceOfPnt2d myParameters;
TColStd_SequenceOfReal myUParameters;
TColStd_SequenceOfReal myVParameters;
Standard_Boolean myEquilateral;
Standard_Boolean myIsDimensionSet;
Standard_Boolean myTrianglesOnPlane;
Standard_Real myDimension;
Standard_Real myumin;
Standard_Real myumax;
Standard_Real myvmin;
Standard_Real myvmax;
BRepMeshAdapt_Status myState;


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
