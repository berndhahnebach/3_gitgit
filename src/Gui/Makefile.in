# Makefile.in generated by automake 1.7.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MOC = @MOC@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYTHON = @PYTHON@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
UIC = @UIC@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
fc_py_ver = @fc_py_ver@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
pkglib_LTLIBRARIES = libFreeCADGui.la

BUILT_SOURCES = \
moc_Application.cpp \
moc_ButtonGroup.cpp \
moc_Command.cpp \
moc_CommandLine.cpp \
moc_DlgActions.cpp \
moc_DlgActionsImp.cpp \
moc_DlgCmdbars.cpp \
moc_DlgCmdbarsImp.cpp \
moc_DlgCommands.cpp \
moc_DlgCommandsImp.cpp \
moc_DlgCustomizeImp.cpp \
moc_DlgDocTemplates.cpp\
moc_DlgDocTemplatesImp.cpp \
moc_DlgEditor.cpp \
moc_DlgEditorImp.cpp \
moc_DlgGeneral.cpp \
moc_DlgGeneralImp.cpp \
moc_DlgMacroExecute.cpp \
moc_DlgMacroExecuteImp.cpp \
moc_DlgMacroRecord.cpp \
moc_DlgMacroRecordImp.cpp \
moc_DlgOnlineHelp.cpp \
moc_DlgOnlineHelpImp.cpp \
moc_DlgParameter.cpp \
moc_DlgParameterImp.cpp \
moc_DlgPreferences.cpp \
moc_DlgPreferencesImp.cpp \
moc_DlgSettings.cpp \
moc_DlgSettingsImp.cpp \
moc_DlgSettings3DView.cpp \
moc_DlgSettings3DViewImp.cpp \
moc_DlgSettingsMacro.cpp \
moc_DlgSettingsMacroImp.cpp \
moc_DlgToolbars.cpp \
moc_DlgToolbarsImp.cpp \
moc_DlgUndoRedo.cpp \
moc_Document.cpp \
moc_HtmlView.cpp \
moc_PlatQt.cpp \
moc_PrefWidgets.cpp \
moc_Process.cpp \
moc_ProcessQt.cpp \
moc_PropertyView.cpp \
moc_ReportView.cpp \
moc_SciEditor.cpp \
moc_ScintillaQt.cpp \
moc_Splashscreen.cpp \
moc_Tree.cpp \
moc_View.cpp\
moc_View3D.cpp \
moc_View3DInventor.cpp \
moc_WidgetFactory.cpp \
moc_Widgets.cpp \
moc_Window.cpp \
moc_HtmlViewP.cpp \
DlgActions.cpp \
DlgActions.h \
DlgCmdbars.cpp \
DlgCmdbars.h \
DlgCommands.cpp \
DlgCommands.h \
DlgDocTemplates.cpp \
DlgDocTemplates.h \
DlgEditor.cpp \
DlgEditor.h \
DlgGeneral.cpp \
DlgGeneral.h \
DlgMacroExecute.cpp \
DlgMacroExecute.h \
DlgMacroRecord.cpp \
DlgMacroRecord.h \
DlgOnlineHelp.cpp \
DlgOnlineHelp.h \
DlgParameter.cpp \
DlgParameter.h \
DlgPreferences.cpp \
DlgPreferences.h \
DlgSettings.cpp \
DlgSettings.h \
DlgSettings3DView.cpp \
DlgSettings3DView.h \
DlgSettingsMacro.cpp \
DlgSettingsMacro.h \
DlgToolbars.cpp \
DlgToolbars.h \
qextmdi/moc_dummykmainwindow.cpp \
qextmdi/moc_dummykpartsdockmainwindow.cpp \
qextmdi/moc_dummyktoolbar.cpp \
qextmdi/kdocktabctl.moc \
qextmdi/kdockwidget.moc \
qextmdi/kdockwidget_private.moc \
qextmdi/qextmdichildarea.moc \
qextmdi/qextmdichildfrm.moc \
qextmdi/qextmdichildfrmcaption.moc \
qextmdi/qextmdichildview.moc \
qextmdi/qextmdimainfrm.moc \
qextmdi/qextmditaskbar.moc \
Language/FreeCAD_de.h \
GuiInitScript.h


libFreeCADGui_la_SOURCES = \
scintilla/AutoComplete.cpp \
scintilla/CallTip.cpp \
scintilla/CellBuffer.cpp \
scintilla/ContractionState.cpp \
scintilla/DocumentAccessor.cpp \
scintilla/Documents.cpp \
scintilla/Editor.cpp \
scintilla/ExternalLexer.cpp \
scintilla/Indicator.cpp \
scintilla/KeyMap.cpp \
scintilla/KeyWords.cpp \
scintilla/LexAda.cpp \
scintilla/LexAsm.cpp \
scintilla/LexAVE.cpp \
scintilla/LexBaan.cpp \
scintilla/LexBullant.cpp \
scintilla/LexConf.cpp \
scintilla/LexCPP.cpp \
scintilla/LexCrontab.cpp \
scintilla/LexCSS.cpp \
scintilla/LexEiffel.cpp \
scintilla/LexEScript.cpp \
scintilla/LexFortran.cpp \
scintilla/LexHTML.cpp \
scintilla/LexLisp.cpp \
scintilla/LexLout.cpp \
scintilla/LexLua.cpp \
scintilla/LexMatlab.cpp \
scintilla/LexOthers.cpp \
scintilla/LexPascal.cpp \
scintilla/LexPerl.cpp \
scintilla/LexPOV.cpp \
scintilla/LexPython.cpp \
scintilla/LexRuby.cpp \
scintilla/LexSQL.cpp \
scintilla/LexVB.cpp \
scintilla/LineMarker.cpp \
scintilla/PropSet.cpp \
scintilla/RESearch.cpp \
scintilla/ScintillaBase.cpp \
scintilla/Style.cpp \
scintilla/StyleContext.cpp \
scintilla/UniConversion.cpp \
scintilla/ViewStyle.cpp \
scintilla/WindowAccessor.cpp \
scintilla/XPM.cpp \
\
qextmdi/dummy_moc.cpp \
qextmdi/kdocktabctl.cpp \
qextmdi/kdockwidget.cpp \
qextmdi/kdockwidget_private.cpp \
qextmdi/qextmdichildarea.cpp \
qextmdi/qextmdichildfrm.cpp \
qextmdi/qextmdichildfrmcaption.cpp \
qextmdi/qextmdichildview.cpp \
qextmdi/qextmdimainfrm.cpp \
qextmdi/qextmditaskbar.cpp \
\
Inventor/OCC/SoBrepShape.cpp \
\
Language/LanguageFactory.cpp \
\
Application.cpp \
BitmapFactory.cpp \
ButtonGroup.cpp \
CommandLine.cpp \
Command.cpp \
CommandStd.cpp  \
CommandTest.cpp \
CommandView.cpp \
DlgActionsImp.cpp \
DlgCmdbarsImp.cpp \
DlgCommandsImp.cpp \
DlgCustomizeImp.cpp \
DlgDocTemplatesImp.cpp \
DlgEditorImp.cpp \
DlgGeneralImp.cpp \
DlgMacroExecuteImp.cpp \
DlgMacroRecordImp.cpp \
DlgOnlineHelpImp.cpp \
DlgParameterImp.cpp \
DlgPreferencesImp.cpp \
DlgSettingsImp.cpp \
DlgSettings3DViewImp.cpp \
DlgSettingsMacroImp.cpp \
DlgToolbarsImp.cpp \
DlgUndoRedo.cpp \
Document.cpp \
GuiConsole.cpp \
HtmlView.cpp \
Macro.cpp \
MouseModel.cpp \
PlatQt.cpp \
PrefWidgets.cpp \
Process.cpp \
PropertyPage.cpp \
PropertyView.cpp \
ReportView.cpp \
resource.cpp \
SciEditor.cpp \
ScintillaQt.cpp \
Selection.cpp \
Splashscreen.cpp \
Tools.cpp \
Tree.cpp \
View.cpp \
View3D.cpp \
View3DInventor.cpp \
ViewProvider.cpp \
WidgetFactory.cpp \
Widgets.cpp \
Window.cpp


# the library search path.
libFreeCADGui_la_LDFLAGS = -L../Base -L../App $(all_libraries)

libFreeCADGui_la_LIBADD = \
		-lqui\
		-lqt-mt \
		-lTKernel \
		-lTKMath \
		-lTKService \
		-lTKGeomAlgo \
		-lTKGeomBase \
		-lTKG2d \
		-lTKG3d \
		-lTKBRep \
		-lTKTopAlgo \
		-lTKPrim \
		-lTKV2d \
		-lTKV3d \
		-lTKCAF \
		-lTKCDF \
		-lCoin \
		-lSoQt \
		-lFreeCADBase \
		-lFreeCADApp


# set the include path found by configure
INCLUDES = $(all_includes) -I./qextmdi -I./Inventor/Qt
subdir = Gui
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/autoconfig.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(pkglib_LTLIBRARIES)

libFreeCADGui_la_DEPENDENCIES =
am_libFreeCADGui_la_OBJECTS = AutoComplete.lo CallTip.lo CellBuffer.lo \
	ContractionState.lo DocumentAccessor.lo Documents.lo Editor.lo \
	ExternalLexer.lo Indicator.lo KeyMap.lo KeyWords.lo LexAda.lo \
	LexAsm.lo LexAVE.lo LexBaan.lo LexBullant.lo LexConf.lo \
	LexCPP.lo LexCrontab.lo LexCSS.lo LexEiffel.lo LexEScript.lo \
	LexFortran.lo LexHTML.lo LexLisp.lo LexLout.lo LexLua.lo \
	LexMatlab.lo LexOthers.lo LexPascal.lo LexPerl.lo LexPOV.lo \
	LexPython.lo LexRuby.lo LexSQL.lo LexVB.lo LineMarker.lo \
	PropSet.lo RESearch.lo ScintillaBase.lo Style.lo \
	StyleContext.lo UniConversion.lo ViewStyle.lo WindowAccessor.lo \
	XPM.lo dummy_moc.lo kdocktabctl.lo kdockwidget.lo \
	kdockwidget_private.lo qextmdichildarea.lo qextmdichildfrm.lo \
	qextmdichildfrmcaption.lo qextmdichildview.lo qextmdimainfrm.lo \
	qextmditaskbar.lo SoBrepShape.lo LanguageFactory.lo \
	Application.lo BitmapFactory.lo ButtonGroup.lo CommandLine.lo \
	Command.lo CommandStd.lo CommandTest.lo CommandView.lo \
	DlgActionsImp.lo DlgCmdbarsImp.lo DlgCommandsImp.lo \
	DlgCustomizeImp.lo DlgDocTemplatesImp.lo DlgEditorImp.lo \
	DlgGeneralImp.lo DlgMacroExecuteImp.lo DlgMacroRecordImp.lo \
	DlgOnlineHelpImp.lo DlgParameterImp.lo DlgPreferencesImp.lo \
	DlgSettingsImp.lo DlgSettings3DViewImp.lo \
	DlgSettingsMacroImp.lo DlgToolbarsImp.lo DlgUndoRedo.lo \
	Document.lo GuiConsole.lo HtmlView.lo Macro.lo MouseModel.lo \
	PlatQt.lo PrefWidgets.lo Process.lo PropertyPage.lo \
	PropertyView.lo ReportView.lo resource.lo SciEditor.lo \
	ScintillaQt.lo Selection.lo Splashscreen.lo Tools.lo Tree.lo \
	View.lo View3D.lo View3DInventor.lo ViewProvider.lo \
	WidgetFactory.lo Widgets.lo Window.lo
libFreeCADGui_la_OBJECTS = $(am_libFreeCADGui_la_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Application.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/AutoComplete.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/BitmapFactory.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ButtonGroup.Plo ./$(DEPDIR)/CallTip.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/CellBuffer.Plo ./$(DEPDIR)/Command.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/CommandLine.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/CommandStd.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/CommandTest.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/CommandView.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ContractionState.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgActionsImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgCmdbarsImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgCommandsImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgCustomizeImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgDocTemplatesImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgEditorImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgGeneralImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgMacroExecuteImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgMacroRecordImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgOnlineHelpImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgParameterImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgPreferencesImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgSettings3DViewImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgSettingsImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgSettingsMacroImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgToolbarsImp.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DlgUndoRedo.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Document.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/DocumentAccessor.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Documents.Plo ./$(DEPDIR)/Editor.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ExternalLexer.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/GuiConsole.Plo ./$(DEPDIR)/HtmlView.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Indicator.Plo ./$(DEPDIR)/KeyMap.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/KeyWords.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LanguageFactory.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexAVE.Plo ./$(DEPDIR)/LexAda.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexAsm.Plo ./$(DEPDIR)/LexBaan.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexBullant.Plo ./$(DEPDIR)/LexCPP.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexCSS.Plo ./$(DEPDIR)/LexConf.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexCrontab.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexEScript.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexEiffel.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexFortran.Plo ./$(DEPDIR)/LexHTML.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexLisp.Plo ./$(DEPDIR)/LexLout.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexLua.Plo ./$(DEPDIR)/LexMatlab.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexOthers.Plo ./$(DEPDIR)/LexPOV.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexPascal.Plo ./$(DEPDIR)/LexPerl.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexPython.Plo ./$(DEPDIR)/LexRuby.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LexSQL.Plo ./$(DEPDIR)/LexVB.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/LineMarker.Plo ./$(DEPDIR)/Macro.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/MouseModel.Plo ./$(DEPDIR)/PlatQt.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PrefWidgets.Plo ./$(DEPDIR)/Process.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PropSet.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PropertyPage.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/PropertyView.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/RESearch.Plo ./$(DEPDIR)/ReportView.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SciEditor.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ScintillaBase.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ScintillaQt.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Selection.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/SoBrepShape.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Splashscreen.Plo ./$(DEPDIR)/Style.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/StyleContext.Plo ./$(DEPDIR)/Tools.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Tree.Plo ./$(DEPDIR)/UniConversion.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/View.Plo ./$(DEPDIR)/View3D.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/View3DInventor.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ViewProvider.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/ViewStyle.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/WidgetFactory.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/Widgets.Plo ./$(DEPDIR)/Window.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/WindowAccessor.Plo ./$(DEPDIR)/XPM.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/dummy_moc.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/kdocktabctl.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/kdockwidget.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/kdockwidget_private.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/qextmdichildarea.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/qextmdichildfrm.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/qextmdichildfrmcaption.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/qextmdichildview.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/qextmdimainfrm.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/qextmditaskbar.Plo \
@AMDEP_TRUE@	./$(DEPDIR)/resource.Plo
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libFreeCADGui_la_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(libFreeCADGui_la_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  Gui/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
pkglibLTLIBRARIES_INSTALL = $(INSTALL)
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(LIBTOOL) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(pkglibdir)/$$f"; \
	    $(LIBTOOL) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(pkglibdir)/$$f; \
	  else :; fi; \
	done

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(pkglibdir)/$$p"; \
	  $(LIBTOOL) --mode=uninstall rm -f $(DESTDIR)$(pkglibdir)/$$p; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" = "$$p" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libFreeCADGui.la: $(libFreeCADGui_la_OBJECTS) $(libFreeCADGui_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(pkglibdir) $(libFreeCADGui_la_LDFLAGS) $(libFreeCADGui_la_OBJECTS) $(libFreeCADGui_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Application.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AutoComplete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BitmapFactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ButtonGroup.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CallTip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CellBuffer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Command.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CommandLine.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CommandStd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CommandTest.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CommandView.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ContractionState.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgActionsImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgCmdbarsImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgCommandsImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgCustomizeImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgDocTemplatesImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgEditorImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgGeneralImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgMacroExecuteImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgMacroRecordImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgOnlineHelpImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgParameterImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgPreferencesImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgSettings3DViewImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgSettingsImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgSettingsMacroImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgToolbarsImp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DlgUndoRedo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Document.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DocumentAccessor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Documents.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Editor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ExternalLexer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GuiConsole.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HtmlView.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Indicator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KeyMap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KeyWords.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageFactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexAVE.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexAda.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexAsm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexBaan.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexBullant.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexCPP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexCSS.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexConf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexCrontab.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexEScript.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexEiffel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexFortran.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexHTML.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexLisp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexLout.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexLua.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexMatlab.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexOthers.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexPOV.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexPascal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexPerl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexPython.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexRuby.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexSQL.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexVB.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LineMarker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Macro.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MouseModel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PlatQt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PrefWidgets.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Process.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PropSet.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PropertyPage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PropertyView.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RESearch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReportView.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SciEditor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScintillaBase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScintillaQt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Selection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SoBrepShape.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Splashscreen.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Style.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StyleContext.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Tools.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Tree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UniConversion.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/View.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/View3D.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/View3DInventor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ViewProvider.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ViewStyle.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WidgetFactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Widgets.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Window.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WindowAccessor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XPM.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dummy_moc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdocktabctl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdockwidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kdockwidget_private.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qextmdichildarea.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qextmdichildfrm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qextmdichildfrmcaption.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qextmdichildview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qextmdimainfrm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qextmditaskbar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resource.Plo@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

AutoComplete.o: scintilla/AutoComplete.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AutoComplete.o -MD -MP -MF "$(DEPDIR)/AutoComplete.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o AutoComplete.o `test -f 'scintilla/AutoComplete.cpp' || echo '$(srcdir)/'`scintilla/AutoComplete.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/AutoComplete.Tpo" "$(DEPDIR)/AutoComplete.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/AutoComplete.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/AutoComplete.cpp' object='AutoComplete.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/AutoComplete.Po' tmpdepfile='$(DEPDIR)/AutoComplete.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AutoComplete.o `test -f 'scintilla/AutoComplete.cpp' || echo '$(srcdir)/'`scintilla/AutoComplete.cpp

AutoComplete.obj: scintilla/AutoComplete.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AutoComplete.obj -MD -MP -MF "$(DEPDIR)/AutoComplete.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o AutoComplete.obj `if test -f 'scintilla/AutoComplete.cpp'; then $(CYGPATH_W) 'scintilla/AutoComplete.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/AutoComplete.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/AutoComplete.Tpo" "$(DEPDIR)/AutoComplete.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/AutoComplete.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/AutoComplete.cpp' object='AutoComplete.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/AutoComplete.Po' tmpdepfile='$(DEPDIR)/AutoComplete.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AutoComplete.obj `if test -f 'scintilla/AutoComplete.cpp'; then $(CYGPATH_W) 'scintilla/AutoComplete.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/AutoComplete.cpp'; fi`

AutoComplete.lo: scintilla/AutoComplete.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AutoComplete.lo -MD -MP -MF "$(DEPDIR)/AutoComplete.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o AutoComplete.lo `test -f 'scintilla/AutoComplete.cpp' || echo '$(srcdir)/'`scintilla/AutoComplete.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/AutoComplete.Tpo" "$(DEPDIR)/AutoComplete.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/AutoComplete.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/AutoComplete.cpp' object='AutoComplete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/AutoComplete.Plo' tmpdepfile='$(DEPDIR)/AutoComplete.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AutoComplete.lo `test -f 'scintilla/AutoComplete.cpp' || echo '$(srcdir)/'`scintilla/AutoComplete.cpp

CallTip.o: scintilla/CallTip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CallTip.o -MD -MP -MF "$(DEPDIR)/CallTip.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o CallTip.o `test -f 'scintilla/CallTip.cpp' || echo '$(srcdir)/'`scintilla/CallTip.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/CallTip.Tpo" "$(DEPDIR)/CallTip.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/CallTip.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/CallTip.cpp' object='CallTip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CallTip.Po' tmpdepfile='$(DEPDIR)/CallTip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CallTip.o `test -f 'scintilla/CallTip.cpp' || echo '$(srcdir)/'`scintilla/CallTip.cpp

CallTip.obj: scintilla/CallTip.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CallTip.obj -MD -MP -MF "$(DEPDIR)/CallTip.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o CallTip.obj `if test -f 'scintilla/CallTip.cpp'; then $(CYGPATH_W) 'scintilla/CallTip.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/CallTip.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/CallTip.Tpo" "$(DEPDIR)/CallTip.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/CallTip.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/CallTip.cpp' object='CallTip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CallTip.Po' tmpdepfile='$(DEPDIR)/CallTip.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CallTip.obj `if test -f 'scintilla/CallTip.cpp'; then $(CYGPATH_W) 'scintilla/CallTip.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/CallTip.cpp'; fi`

CallTip.lo: scintilla/CallTip.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CallTip.lo -MD -MP -MF "$(DEPDIR)/CallTip.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o CallTip.lo `test -f 'scintilla/CallTip.cpp' || echo '$(srcdir)/'`scintilla/CallTip.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/CallTip.Tpo" "$(DEPDIR)/CallTip.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/CallTip.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/CallTip.cpp' object='CallTip.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CallTip.Plo' tmpdepfile='$(DEPDIR)/CallTip.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CallTip.lo `test -f 'scintilla/CallTip.cpp' || echo '$(srcdir)/'`scintilla/CallTip.cpp

CellBuffer.o: scintilla/CellBuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CellBuffer.o -MD -MP -MF "$(DEPDIR)/CellBuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o CellBuffer.o `test -f 'scintilla/CellBuffer.cpp' || echo '$(srcdir)/'`scintilla/CellBuffer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/CellBuffer.Tpo" "$(DEPDIR)/CellBuffer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/CellBuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/CellBuffer.cpp' object='CellBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CellBuffer.Po' tmpdepfile='$(DEPDIR)/CellBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CellBuffer.o `test -f 'scintilla/CellBuffer.cpp' || echo '$(srcdir)/'`scintilla/CellBuffer.cpp

CellBuffer.obj: scintilla/CellBuffer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CellBuffer.obj -MD -MP -MF "$(DEPDIR)/CellBuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o CellBuffer.obj `if test -f 'scintilla/CellBuffer.cpp'; then $(CYGPATH_W) 'scintilla/CellBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/CellBuffer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/CellBuffer.Tpo" "$(DEPDIR)/CellBuffer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/CellBuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/CellBuffer.cpp' object='CellBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CellBuffer.Po' tmpdepfile='$(DEPDIR)/CellBuffer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CellBuffer.obj `if test -f 'scintilla/CellBuffer.cpp'; then $(CYGPATH_W) 'scintilla/CellBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/CellBuffer.cpp'; fi`

CellBuffer.lo: scintilla/CellBuffer.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CellBuffer.lo -MD -MP -MF "$(DEPDIR)/CellBuffer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o CellBuffer.lo `test -f 'scintilla/CellBuffer.cpp' || echo '$(srcdir)/'`scintilla/CellBuffer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/CellBuffer.Tpo" "$(DEPDIR)/CellBuffer.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/CellBuffer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/CellBuffer.cpp' object='CellBuffer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/CellBuffer.Plo' tmpdepfile='$(DEPDIR)/CellBuffer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CellBuffer.lo `test -f 'scintilla/CellBuffer.cpp' || echo '$(srcdir)/'`scintilla/CellBuffer.cpp

ContractionState.o: scintilla/ContractionState.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContractionState.o -MD -MP -MF "$(DEPDIR)/ContractionState.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ContractionState.o `test -f 'scintilla/ContractionState.cpp' || echo '$(srcdir)/'`scintilla/ContractionState.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ContractionState.Tpo" "$(DEPDIR)/ContractionState.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ContractionState.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ContractionState.cpp' object='ContractionState.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ContractionState.Po' tmpdepfile='$(DEPDIR)/ContractionState.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContractionState.o `test -f 'scintilla/ContractionState.cpp' || echo '$(srcdir)/'`scintilla/ContractionState.cpp

ContractionState.obj: scintilla/ContractionState.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContractionState.obj -MD -MP -MF "$(DEPDIR)/ContractionState.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ContractionState.obj `if test -f 'scintilla/ContractionState.cpp'; then $(CYGPATH_W) 'scintilla/ContractionState.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/ContractionState.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ContractionState.Tpo" "$(DEPDIR)/ContractionState.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ContractionState.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ContractionState.cpp' object='ContractionState.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ContractionState.Po' tmpdepfile='$(DEPDIR)/ContractionState.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContractionState.obj `if test -f 'scintilla/ContractionState.cpp'; then $(CYGPATH_W) 'scintilla/ContractionState.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/ContractionState.cpp'; fi`

ContractionState.lo: scintilla/ContractionState.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ContractionState.lo -MD -MP -MF "$(DEPDIR)/ContractionState.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ContractionState.lo `test -f 'scintilla/ContractionState.cpp' || echo '$(srcdir)/'`scintilla/ContractionState.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ContractionState.Tpo" "$(DEPDIR)/ContractionState.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ContractionState.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ContractionState.cpp' object='ContractionState.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ContractionState.Plo' tmpdepfile='$(DEPDIR)/ContractionState.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ContractionState.lo `test -f 'scintilla/ContractionState.cpp' || echo '$(srcdir)/'`scintilla/ContractionState.cpp

DocumentAccessor.o: scintilla/DocumentAccessor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DocumentAccessor.o -MD -MP -MF "$(DEPDIR)/DocumentAccessor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o DocumentAccessor.o `test -f 'scintilla/DocumentAccessor.cpp' || echo '$(srcdir)/'`scintilla/DocumentAccessor.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/DocumentAccessor.Tpo" "$(DEPDIR)/DocumentAccessor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/DocumentAccessor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/DocumentAccessor.cpp' object='DocumentAccessor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/DocumentAccessor.Po' tmpdepfile='$(DEPDIR)/DocumentAccessor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DocumentAccessor.o `test -f 'scintilla/DocumentAccessor.cpp' || echo '$(srcdir)/'`scintilla/DocumentAccessor.cpp

DocumentAccessor.obj: scintilla/DocumentAccessor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DocumentAccessor.obj -MD -MP -MF "$(DEPDIR)/DocumentAccessor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o DocumentAccessor.obj `if test -f 'scintilla/DocumentAccessor.cpp'; then $(CYGPATH_W) 'scintilla/DocumentAccessor.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/DocumentAccessor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/DocumentAccessor.Tpo" "$(DEPDIR)/DocumentAccessor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/DocumentAccessor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/DocumentAccessor.cpp' object='DocumentAccessor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/DocumentAccessor.Po' tmpdepfile='$(DEPDIR)/DocumentAccessor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DocumentAccessor.obj `if test -f 'scintilla/DocumentAccessor.cpp'; then $(CYGPATH_W) 'scintilla/DocumentAccessor.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/DocumentAccessor.cpp'; fi`

DocumentAccessor.lo: scintilla/DocumentAccessor.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DocumentAccessor.lo -MD -MP -MF "$(DEPDIR)/DocumentAccessor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o DocumentAccessor.lo `test -f 'scintilla/DocumentAccessor.cpp' || echo '$(srcdir)/'`scintilla/DocumentAccessor.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/DocumentAccessor.Tpo" "$(DEPDIR)/DocumentAccessor.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/DocumentAccessor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/DocumentAccessor.cpp' object='DocumentAccessor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/DocumentAccessor.Plo' tmpdepfile='$(DEPDIR)/DocumentAccessor.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DocumentAccessor.lo `test -f 'scintilla/DocumentAccessor.cpp' || echo '$(srcdir)/'`scintilla/DocumentAccessor.cpp

Documents.o: scintilla/Documents.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Documents.o -MD -MP -MF "$(DEPDIR)/Documents.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Documents.o `test -f 'scintilla/Documents.cpp' || echo '$(srcdir)/'`scintilla/Documents.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Documents.Tpo" "$(DEPDIR)/Documents.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Documents.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Documents.cpp' object='Documents.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Documents.Po' tmpdepfile='$(DEPDIR)/Documents.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Documents.o `test -f 'scintilla/Documents.cpp' || echo '$(srcdir)/'`scintilla/Documents.cpp

Documents.obj: scintilla/Documents.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Documents.obj -MD -MP -MF "$(DEPDIR)/Documents.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Documents.obj `if test -f 'scintilla/Documents.cpp'; then $(CYGPATH_W) 'scintilla/Documents.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/Documents.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Documents.Tpo" "$(DEPDIR)/Documents.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Documents.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Documents.cpp' object='Documents.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Documents.Po' tmpdepfile='$(DEPDIR)/Documents.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Documents.obj `if test -f 'scintilla/Documents.cpp'; then $(CYGPATH_W) 'scintilla/Documents.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/Documents.cpp'; fi`

Documents.lo: scintilla/Documents.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Documents.lo -MD -MP -MF "$(DEPDIR)/Documents.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Documents.lo `test -f 'scintilla/Documents.cpp' || echo '$(srcdir)/'`scintilla/Documents.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Documents.Tpo" "$(DEPDIR)/Documents.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Documents.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Documents.cpp' object='Documents.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Documents.Plo' tmpdepfile='$(DEPDIR)/Documents.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Documents.lo `test -f 'scintilla/Documents.cpp' || echo '$(srcdir)/'`scintilla/Documents.cpp

Editor.o: scintilla/Editor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Editor.o -MD -MP -MF "$(DEPDIR)/Editor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Editor.o `test -f 'scintilla/Editor.cpp' || echo '$(srcdir)/'`scintilla/Editor.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Editor.Tpo" "$(DEPDIR)/Editor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Editor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Editor.cpp' object='Editor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Editor.Po' tmpdepfile='$(DEPDIR)/Editor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Editor.o `test -f 'scintilla/Editor.cpp' || echo '$(srcdir)/'`scintilla/Editor.cpp

Editor.obj: scintilla/Editor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Editor.obj -MD -MP -MF "$(DEPDIR)/Editor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Editor.obj `if test -f 'scintilla/Editor.cpp'; then $(CYGPATH_W) 'scintilla/Editor.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/Editor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Editor.Tpo" "$(DEPDIR)/Editor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Editor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Editor.cpp' object='Editor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Editor.Po' tmpdepfile='$(DEPDIR)/Editor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Editor.obj `if test -f 'scintilla/Editor.cpp'; then $(CYGPATH_W) 'scintilla/Editor.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/Editor.cpp'; fi`

Editor.lo: scintilla/Editor.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Editor.lo -MD -MP -MF "$(DEPDIR)/Editor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Editor.lo `test -f 'scintilla/Editor.cpp' || echo '$(srcdir)/'`scintilla/Editor.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Editor.Tpo" "$(DEPDIR)/Editor.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Editor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Editor.cpp' object='Editor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Editor.Plo' tmpdepfile='$(DEPDIR)/Editor.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Editor.lo `test -f 'scintilla/Editor.cpp' || echo '$(srcdir)/'`scintilla/Editor.cpp

ExternalLexer.o: scintilla/ExternalLexer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ExternalLexer.o -MD -MP -MF "$(DEPDIR)/ExternalLexer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ExternalLexer.o `test -f 'scintilla/ExternalLexer.cpp' || echo '$(srcdir)/'`scintilla/ExternalLexer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ExternalLexer.Tpo" "$(DEPDIR)/ExternalLexer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ExternalLexer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ExternalLexer.cpp' object='ExternalLexer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ExternalLexer.Po' tmpdepfile='$(DEPDIR)/ExternalLexer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ExternalLexer.o `test -f 'scintilla/ExternalLexer.cpp' || echo '$(srcdir)/'`scintilla/ExternalLexer.cpp

ExternalLexer.obj: scintilla/ExternalLexer.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ExternalLexer.obj -MD -MP -MF "$(DEPDIR)/ExternalLexer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ExternalLexer.obj `if test -f 'scintilla/ExternalLexer.cpp'; then $(CYGPATH_W) 'scintilla/ExternalLexer.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/ExternalLexer.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ExternalLexer.Tpo" "$(DEPDIR)/ExternalLexer.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ExternalLexer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ExternalLexer.cpp' object='ExternalLexer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ExternalLexer.Po' tmpdepfile='$(DEPDIR)/ExternalLexer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ExternalLexer.obj `if test -f 'scintilla/ExternalLexer.cpp'; then $(CYGPATH_W) 'scintilla/ExternalLexer.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/ExternalLexer.cpp'; fi`

ExternalLexer.lo: scintilla/ExternalLexer.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ExternalLexer.lo -MD -MP -MF "$(DEPDIR)/ExternalLexer.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ExternalLexer.lo `test -f 'scintilla/ExternalLexer.cpp' || echo '$(srcdir)/'`scintilla/ExternalLexer.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ExternalLexer.Tpo" "$(DEPDIR)/ExternalLexer.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ExternalLexer.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ExternalLexer.cpp' object='ExternalLexer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ExternalLexer.Plo' tmpdepfile='$(DEPDIR)/ExternalLexer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ExternalLexer.lo `test -f 'scintilla/ExternalLexer.cpp' || echo '$(srcdir)/'`scintilla/ExternalLexer.cpp

Indicator.o: scintilla/Indicator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Indicator.o -MD -MP -MF "$(DEPDIR)/Indicator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Indicator.o `test -f 'scintilla/Indicator.cpp' || echo '$(srcdir)/'`scintilla/Indicator.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Indicator.Tpo" "$(DEPDIR)/Indicator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Indicator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Indicator.cpp' object='Indicator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Indicator.Po' tmpdepfile='$(DEPDIR)/Indicator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Indicator.o `test -f 'scintilla/Indicator.cpp' || echo '$(srcdir)/'`scintilla/Indicator.cpp

Indicator.obj: scintilla/Indicator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Indicator.obj -MD -MP -MF "$(DEPDIR)/Indicator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Indicator.obj `if test -f 'scintilla/Indicator.cpp'; then $(CYGPATH_W) 'scintilla/Indicator.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/Indicator.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Indicator.Tpo" "$(DEPDIR)/Indicator.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Indicator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Indicator.cpp' object='Indicator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Indicator.Po' tmpdepfile='$(DEPDIR)/Indicator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Indicator.obj `if test -f 'scintilla/Indicator.cpp'; then $(CYGPATH_W) 'scintilla/Indicator.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/Indicator.cpp'; fi`

Indicator.lo: scintilla/Indicator.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Indicator.lo -MD -MP -MF "$(DEPDIR)/Indicator.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Indicator.lo `test -f 'scintilla/Indicator.cpp' || echo '$(srcdir)/'`scintilla/Indicator.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Indicator.Tpo" "$(DEPDIR)/Indicator.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Indicator.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Indicator.cpp' object='Indicator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Indicator.Plo' tmpdepfile='$(DEPDIR)/Indicator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Indicator.lo `test -f 'scintilla/Indicator.cpp' || echo '$(srcdir)/'`scintilla/Indicator.cpp

KeyMap.o: scintilla/KeyMap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeyMap.o -MD -MP -MF "$(DEPDIR)/KeyMap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KeyMap.o `test -f 'scintilla/KeyMap.cpp' || echo '$(srcdir)/'`scintilla/KeyMap.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KeyMap.Tpo" "$(DEPDIR)/KeyMap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KeyMap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/KeyMap.cpp' object='KeyMap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KeyMap.Po' tmpdepfile='$(DEPDIR)/KeyMap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeyMap.o `test -f 'scintilla/KeyMap.cpp' || echo '$(srcdir)/'`scintilla/KeyMap.cpp

KeyMap.obj: scintilla/KeyMap.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeyMap.obj -MD -MP -MF "$(DEPDIR)/KeyMap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KeyMap.obj `if test -f 'scintilla/KeyMap.cpp'; then $(CYGPATH_W) 'scintilla/KeyMap.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/KeyMap.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KeyMap.Tpo" "$(DEPDIR)/KeyMap.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KeyMap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/KeyMap.cpp' object='KeyMap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KeyMap.Po' tmpdepfile='$(DEPDIR)/KeyMap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeyMap.obj `if test -f 'scintilla/KeyMap.cpp'; then $(CYGPATH_W) 'scintilla/KeyMap.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/KeyMap.cpp'; fi`

KeyMap.lo: scintilla/KeyMap.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeyMap.lo -MD -MP -MF "$(DEPDIR)/KeyMap.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KeyMap.lo `test -f 'scintilla/KeyMap.cpp' || echo '$(srcdir)/'`scintilla/KeyMap.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KeyMap.Tpo" "$(DEPDIR)/KeyMap.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KeyMap.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/KeyMap.cpp' object='KeyMap.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KeyMap.Plo' tmpdepfile='$(DEPDIR)/KeyMap.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeyMap.lo `test -f 'scintilla/KeyMap.cpp' || echo '$(srcdir)/'`scintilla/KeyMap.cpp

KeyWords.o: scintilla/KeyWords.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeyWords.o -MD -MP -MF "$(DEPDIR)/KeyWords.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KeyWords.o `test -f 'scintilla/KeyWords.cpp' || echo '$(srcdir)/'`scintilla/KeyWords.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KeyWords.Tpo" "$(DEPDIR)/KeyWords.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KeyWords.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/KeyWords.cpp' object='KeyWords.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KeyWords.Po' tmpdepfile='$(DEPDIR)/KeyWords.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeyWords.o `test -f 'scintilla/KeyWords.cpp' || echo '$(srcdir)/'`scintilla/KeyWords.cpp

KeyWords.obj: scintilla/KeyWords.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeyWords.obj -MD -MP -MF "$(DEPDIR)/KeyWords.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KeyWords.obj `if test -f 'scintilla/KeyWords.cpp'; then $(CYGPATH_W) 'scintilla/KeyWords.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/KeyWords.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KeyWords.Tpo" "$(DEPDIR)/KeyWords.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KeyWords.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/KeyWords.cpp' object='KeyWords.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KeyWords.Po' tmpdepfile='$(DEPDIR)/KeyWords.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeyWords.obj `if test -f 'scintilla/KeyWords.cpp'; then $(CYGPATH_W) 'scintilla/KeyWords.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/KeyWords.cpp'; fi`

KeyWords.lo: scintilla/KeyWords.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KeyWords.lo -MD -MP -MF "$(DEPDIR)/KeyWords.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KeyWords.lo `test -f 'scintilla/KeyWords.cpp' || echo '$(srcdir)/'`scintilla/KeyWords.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/KeyWords.Tpo" "$(DEPDIR)/KeyWords.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KeyWords.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/KeyWords.cpp' object='KeyWords.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KeyWords.Plo' tmpdepfile='$(DEPDIR)/KeyWords.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KeyWords.lo `test -f 'scintilla/KeyWords.cpp' || echo '$(srcdir)/'`scintilla/KeyWords.cpp

LexAda.o: scintilla/LexAda.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAda.o -MD -MP -MF "$(DEPDIR)/LexAda.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexAda.o `test -f 'scintilla/LexAda.cpp' || echo '$(srcdir)/'`scintilla/LexAda.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexAda.Tpo" "$(DEPDIR)/LexAda.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexAda.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexAda.cpp' object='LexAda.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexAda.Po' tmpdepfile='$(DEPDIR)/LexAda.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAda.o `test -f 'scintilla/LexAda.cpp' || echo '$(srcdir)/'`scintilla/LexAda.cpp

LexAda.obj: scintilla/LexAda.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAda.obj -MD -MP -MF "$(DEPDIR)/LexAda.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexAda.obj `if test -f 'scintilla/LexAda.cpp'; then $(CYGPATH_W) 'scintilla/LexAda.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexAda.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexAda.Tpo" "$(DEPDIR)/LexAda.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexAda.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexAda.cpp' object='LexAda.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexAda.Po' tmpdepfile='$(DEPDIR)/LexAda.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAda.obj `if test -f 'scintilla/LexAda.cpp'; then $(CYGPATH_W) 'scintilla/LexAda.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexAda.cpp'; fi`

LexAda.lo: scintilla/LexAda.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAda.lo -MD -MP -MF "$(DEPDIR)/LexAda.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexAda.lo `test -f 'scintilla/LexAda.cpp' || echo '$(srcdir)/'`scintilla/LexAda.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexAda.Tpo" "$(DEPDIR)/LexAda.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexAda.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexAda.cpp' object='LexAda.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexAda.Plo' tmpdepfile='$(DEPDIR)/LexAda.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAda.lo `test -f 'scintilla/LexAda.cpp' || echo '$(srcdir)/'`scintilla/LexAda.cpp

LexAsm.o: scintilla/LexAsm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAsm.o -MD -MP -MF "$(DEPDIR)/LexAsm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexAsm.o `test -f 'scintilla/LexAsm.cpp' || echo '$(srcdir)/'`scintilla/LexAsm.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexAsm.Tpo" "$(DEPDIR)/LexAsm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexAsm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexAsm.cpp' object='LexAsm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexAsm.Po' tmpdepfile='$(DEPDIR)/LexAsm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAsm.o `test -f 'scintilla/LexAsm.cpp' || echo '$(srcdir)/'`scintilla/LexAsm.cpp

LexAsm.obj: scintilla/LexAsm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAsm.obj -MD -MP -MF "$(DEPDIR)/LexAsm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexAsm.obj `if test -f 'scintilla/LexAsm.cpp'; then $(CYGPATH_W) 'scintilla/LexAsm.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexAsm.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexAsm.Tpo" "$(DEPDIR)/LexAsm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexAsm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexAsm.cpp' object='LexAsm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexAsm.Po' tmpdepfile='$(DEPDIR)/LexAsm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAsm.obj `if test -f 'scintilla/LexAsm.cpp'; then $(CYGPATH_W) 'scintilla/LexAsm.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexAsm.cpp'; fi`

LexAsm.lo: scintilla/LexAsm.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAsm.lo -MD -MP -MF "$(DEPDIR)/LexAsm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexAsm.lo `test -f 'scintilla/LexAsm.cpp' || echo '$(srcdir)/'`scintilla/LexAsm.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexAsm.Tpo" "$(DEPDIR)/LexAsm.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexAsm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexAsm.cpp' object='LexAsm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexAsm.Plo' tmpdepfile='$(DEPDIR)/LexAsm.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAsm.lo `test -f 'scintilla/LexAsm.cpp' || echo '$(srcdir)/'`scintilla/LexAsm.cpp

LexAVE.o: scintilla/LexAVE.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAVE.o -MD -MP -MF "$(DEPDIR)/LexAVE.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexAVE.o `test -f 'scintilla/LexAVE.cpp' || echo '$(srcdir)/'`scintilla/LexAVE.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexAVE.Tpo" "$(DEPDIR)/LexAVE.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexAVE.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexAVE.cpp' object='LexAVE.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexAVE.Po' tmpdepfile='$(DEPDIR)/LexAVE.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAVE.o `test -f 'scintilla/LexAVE.cpp' || echo '$(srcdir)/'`scintilla/LexAVE.cpp

LexAVE.obj: scintilla/LexAVE.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAVE.obj -MD -MP -MF "$(DEPDIR)/LexAVE.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexAVE.obj `if test -f 'scintilla/LexAVE.cpp'; then $(CYGPATH_W) 'scintilla/LexAVE.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexAVE.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexAVE.Tpo" "$(DEPDIR)/LexAVE.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexAVE.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexAVE.cpp' object='LexAVE.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexAVE.Po' tmpdepfile='$(DEPDIR)/LexAVE.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAVE.obj `if test -f 'scintilla/LexAVE.cpp'; then $(CYGPATH_W) 'scintilla/LexAVE.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexAVE.cpp'; fi`

LexAVE.lo: scintilla/LexAVE.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexAVE.lo -MD -MP -MF "$(DEPDIR)/LexAVE.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexAVE.lo `test -f 'scintilla/LexAVE.cpp' || echo '$(srcdir)/'`scintilla/LexAVE.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexAVE.Tpo" "$(DEPDIR)/LexAVE.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexAVE.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexAVE.cpp' object='LexAVE.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexAVE.Plo' tmpdepfile='$(DEPDIR)/LexAVE.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexAVE.lo `test -f 'scintilla/LexAVE.cpp' || echo '$(srcdir)/'`scintilla/LexAVE.cpp

LexBaan.o: scintilla/LexBaan.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexBaan.o -MD -MP -MF "$(DEPDIR)/LexBaan.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexBaan.o `test -f 'scintilla/LexBaan.cpp' || echo '$(srcdir)/'`scintilla/LexBaan.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexBaan.Tpo" "$(DEPDIR)/LexBaan.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexBaan.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexBaan.cpp' object='LexBaan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexBaan.Po' tmpdepfile='$(DEPDIR)/LexBaan.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexBaan.o `test -f 'scintilla/LexBaan.cpp' || echo '$(srcdir)/'`scintilla/LexBaan.cpp

LexBaan.obj: scintilla/LexBaan.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexBaan.obj -MD -MP -MF "$(DEPDIR)/LexBaan.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexBaan.obj `if test -f 'scintilla/LexBaan.cpp'; then $(CYGPATH_W) 'scintilla/LexBaan.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexBaan.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexBaan.Tpo" "$(DEPDIR)/LexBaan.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexBaan.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexBaan.cpp' object='LexBaan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexBaan.Po' tmpdepfile='$(DEPDIR)/LexBaan.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexBaan.obj `if test -f 'scintilla/LexBaan.cpp'; then $(CYGPATH_W) 'scintilla/LexBaan.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexBaan.cpp'; fi`

LexBaan.lo: scintilla/LexBaan.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexBaan.lo -MD -MP -MF "$(DEPDIR)/LexBaan.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexBaan.lo `test -f 'scintilla/LexBaan.cpp' || echo '$(srcdir)/'`scintilla/LexBaan.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexBaan.Tpo" "$(DEPDIR)/LexBaan.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexBaan.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexBaan.cpp' object='LexBaan.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexBaan.Plo' tmpdepfile='$(DEPDIR)/LexBaan.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexBaan.lo `test -f 'scintilla/LexBaan.cpp' || echo '$(srcdir)/'`scintilla/LexBaan.cpp

LexBullant.o: scintilla/LexBullant.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexBullant.o -MD -MP -MF "$(DEPDIR)/LexBullant.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexBullant.o `test -f 'scintilla/LexBullant.cpp' || echo '$(srcdir)/'`scintilla/LexBullant.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexBullant.Tpo" "$(DEPDIR)/LexBullant.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexBullant.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexBullant.cpp' object='LexBullant.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexBullant.Po' tmpdepfile='$(DEPDIR)/LexBullant.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexBullant.o `test -f 'scintilla/LexBullant.cpp' || echo '$(srcdir)/'`scintilla/LexBullant.cpp

LexBullant.obj: scintilla/LexBullant.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexBullant.obj -MD -MP -MF "$(DEPDIR)/LexBullant.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexBullant.obj `if test -f 'scintilla/LexBullant.cpp'; then $(CYGPATH_W) 'scintilla/LexBullant.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexBullant.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexBullant.Tpo" "$(DEPDIR)/LexBullant.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexBullant.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexBullant.cpp' object='LexBullant.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexBullant.Po' tmpdepfile='$(DEPDIR)/LexBullant.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexBullant.obj `if test -f 'scintilla/LexBullant.cpp'; then $(CYGPATH_W) 'scintilla/LexBullant.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexBullant.cpp'; fi`

LexBullant.lo: scintilla/LexBullant.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexBullant.lo -MD -MP -MF "$(DEPDIR)/LexBullant.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexBullant.lo `test -f 'scintilla/LexBullant.cpp' || echo '$(srcdir)/'`scintilla/LexBullant.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexBullant.Tpo" "$(DEPDIR)/LexBullant.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexBullant.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexBullant.cpp' object='LexBullant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexBullant.Plo' tmpdepfile='$(DEPDIR)/LexBullant.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexBullant.lo `test -f 'scintilla/LexBullant.cpp' || echo '$(srcdir)/'`scintilla/LexBullant.cpp

LexConf.o: scintilla/LexConf.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexConf.o -MD -MP -MF "$(DEPDIR)/LexConf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexConf.o `test -f 'scintilla/LexConf.cpp' || echo '$(srcdir)/'`scintilla/LexConf.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexConf.Tpo" "$(DEPDIR)/LexConf.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexConf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexConf.cpp' object='LexConf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexConf.Po' tmpdepfile='$(DEPDIR)/LexConf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexConf.o `test -f 'scintilla/LexConf.cpp' || echo '$(srcdir)/'`scintilla/LexConf.cpp

LexConf.obj: scintilla/LexConf.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexConf.obj -MD -MP -MF "$(DEPDIR)/LexConf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexConf.obj `if test -f 'scintilla/LexConf.cpp'; then $(CYGPATH_W) 'scintilla/LexConf.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexConf.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexConf.Tpo" "$(DEPDIR)/LexConf.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexConf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexConf.cpp' object='LexConf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexConf.Po' tmpdepfile='$(DEPDIR)/LexConf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexConf.obj `if test -f 'scintilla/LexConf.cpp'; then $(CYGPATH_W) 'scintilla/LexConf.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexConf.cpp'; fi`

LexConf.lo: scintilla/LexConf.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexConf.lo -MD -MP -MF "$(DEPDIR)/LexConf.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexConf.lo `test -f 'scintilla/LexConf.cpp' || echo '$(srcdir)/'`scintilla/LexConf.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexConf.Tpo" "$(DEPDIR)/LexConf.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexConf.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexConf.cpp' object='LexConf.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexConf.Plo' tmpdepfile='$(DEPDIR)/LexConf.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexConf.lo `test -f 'scintilla/LexConf.cpp' || echo '$(srcdir)/'`scintilla/LexConf.cpp

LexCPP.o: scintilla/LexCPP.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCPP.o -MD -MP -MF "$(DEPDIR)/LexCPP.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexCPP.o `test -f 'scintilla/LexCPP.cpp' || echo '$(srcdir)/'`scintilla/LexCPP.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexCPP.Tpo" "$(DEPDIR)/LexCPP.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexCPP.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexCPP.cpp' object='LexCPP.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexCPP.Po' tmpdepfile='$(DEPDIR)/LexCPP.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCPP.o `test -f 'scintilla/LexCPP.cpp' || echo '$(srcdir)/'`scintilla/LexCPP.cpp

LexCPP.obj: scintilla/LexCPP.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCPP.obj -MD -MP -MF "$(DEPDIR)/LexCPP.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexCPP.obj `if test -f 'scintilla/LexCPP.cpp'; then $(CYGPATH_W) 'scintilla/LexCPP.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexCPP.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexCPP.Tpo" "$(DEPDIR)/LexCPP.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexCPP.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexCPP.cpp' object='LexCPP.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexCPP.Po' tmpdepfile='$(DEPDIR)/LexCPP.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCPP.obj `if test -f 'scintilla/LexCPP.cpp'; then $(CYGPATH_W) 'scintilla/LexCPP.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexCPP.cpp'; fi`

LexCPP.lo: scintilla/LexCPP.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCPP.lo -MD -MP -MF "$(DEPDIR)/LexCPP.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexCPP.lo `test -f 'scintilla/LexCPP.cpp' || echo '$(srcdir)/'`scintilla/LexCPP.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexCPP.Tpo" "$(DEPDIR)/LexCPP.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexCPP.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexCPP.cpp' object='LexCPP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexCPP.Plo' tmpdepfile='$(DEPDIR)/LexCPP.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCPP.lo `test -f 'scintilla/LexCPP.cpp' || echo '$(srcdir)/'`scintilla/LexCPP.cpp

LexCrontab.o: scintilla/LexCrontab.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCrontab.o -MD -MP -MF "$(DEPDIR)/LexCrontab.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexCrontab.o `test -f 'scintilla/LexCrontab.cpp' || echo '$(srcdir)/'`scintilla/LexCrontab.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexCrontab.Tpo" "$(DEPDIR)/LexCrontab.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexCrontab.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexCrontab.cpp' object='LexCrontab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexCrontab.Po' tmpdepfile='$(DEPDIR)/LexCrontab.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCrontab.o `test -f 'scintilla/LexCrontab.cpp' || echo '$(srcdir)/'`scintilla/LexCrontab.cpp

LexCrontab.obj: scintilla/LexCrontab.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCrontab.obj -MD -MP -MF "$(DEPDIR)/LexCrontab.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexCrontab.obj `if test -f 'scintilla/LexCrontab.cpp'; then $(CYGPATH_W) 'scintilla/LexCrontab.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexCrontab.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexCrontab.Tpo" "$(DEPDIR)/LexCrontab.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexCrontab.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexCrontab.cpp' object='LexCrontab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexCrontab.Po' tmpdepfile='$(DEPDIR)/LexCrontab.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCrontab.obj `if test -f 'scintilla/LexCrontab.cpp'; then $(CYGPATH_W) 'scintilla/LexCrontab.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexCrontab.cpp'; fi`

LexCrontab.lo: scintilla/LexCrontab.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCrontab.lo -MD -MP -MF "$(DEPDIR)/LexCrontab.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexCrontab.lo `test -f 'scintilla/LexCrontab.cpp' || echo '$(srcdir)/'`scintilla/LexCrontab.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexCrontab.Tpo" "$(DEPDIR)/LexCrontab.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexCrontab.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexCrontab.cpp' object='LexCrontab.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexCrontab.Plo' tmpdepfile='$(DEPDIR)/LexCrontab.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCrontab.lo `test -f 'scintilla/LexCrontab.cpp' || echo '$(srcdir)/'`scintilla/LexCrontab.cpp

LexCSS.o: scintilla/LexCSS.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCSS.o -MD -MP -MF "$(DEPDIR)/LexCSS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexCSS.o `test -f 'scintilla/LexCSS.cpp' || echo '$(srcdir)/'`scintilla/LexCSS.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexCSS.Tpo" "$(DEPDIR)/LexCSS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexCSS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexCSS.cpp' object='LexCSS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexCSS.Po' tmpdepfile='$(DEPDIR)/LexCSS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCSS.o `test -f 'scintilla/LexCSS.cpp' || echo '$(srcdir)/'`scintilla/LexCSS.cpp

LexCSS.obj: scintilla/LexCSS.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCSS.obj -MD -MP -MF "$(DEPDIR)/LexCSS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexCSS.obj `if test -f 'scintilla/LexCSS.cpp'; then $(CYGPATH_W) 'scintilla/LexCSS.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexCSS.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexCSS.Tpo" "$(DEPDIR)/LexCSS.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexCSS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexCSS.cpp' object='LexCSS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexCSS.Po' tmpdepfile='$(DEPDIR)/LexCSS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCSS.obj `if test -f 'scintilla/LexCSS.cpp'; then $(CYGPATH_W) 'scintilla/LexCSS.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexCSS.cpp'; fi`

LexCSS.lo: scintilla/LexCSS.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexCSS.lo -MD -MP -MF "$(DEPDIR)/LexCSS.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexCSS.lo `test -f 'scintilla/LexCSS.cpp' || echo '$(srcdir)/'`scintilla/LexCSS.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexCSS.Tpo" "$(DEPDIR)/LexCSS.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexCSS.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexCSS.cpp' object='LexCSS.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexCSS.Plo' tmpdepfile='$(DEPDIR)/LexCSS.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexCSS.lo `test -f 'scintilla/LexCSS.cpp' || echo '$(srcdir)/'`scintilla/LexCSS.cpp

LexEiffel.o: scintilla/LexEiffel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexEiffel.o -MD -MP -MF "$(DEPDIR)/LexEiffel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexEiffel.o `test -f 'scintilla/LexEiffel.cpp' || echo '$(srcdir)/'`scintilla/LexEiffel.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexEiffel.Tpo" "$(DEPDIR)/LexEiffel.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexEiffel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexEiffel.cpp' object='LexEiffel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexEiffel.Po' tmpdepfile='$(DEPDIR)/LexEiffel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexEiffel.o `test -f 'scintilla/LexEiffel.cpp' || echo '$(srcdir)/'`scintilla/LexEiffel.cpp

LexEiffel.obj: scintilla/LexEiffel.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexEiffel.obj -MD -MP -MF "$(DEPDIR)/LexEiffel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexEiffel.obj `if test -f 'scintilla/LexEiffel.cpp'; then $(CYGPATH_W) 'scintilla/LexEiffel.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexEiffel.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexEiffel.Tpo" "$(DEPDIR)/LexEiffel.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexEiffel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexEiffel.cpp' object='LexEiffel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexEiffel.Po' tmpdepfile='$(DEPDIR)/LexEiffel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexEiffel.obj `if test -f 'scintilla/LexEiffel.cpp'; then $(CYGPATH_W) 'scintilla/LexEiffel.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexEiffel.cpp'; fi`

LexEiffel.lo: scintilla/LexEiffel.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexEiffel.lo -MD -MP -MF "$(DEPDIR)/LexEiffel.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexEiffel.lo `test -f 'scintilla/LexEiffel.cpp' || echo '$(srcdir)/'`scintilla/LexEiffel.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexEiffel.Tpo" "$(DEPDIR)/LexEiffel.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexEiffel.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexEiffel.cpp' object='LexEiffel.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexEiffel.Plo' tmpdepfile='$(DEPDIR)/LexEiffel.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexEiffel.lo `test -f 'scintilla/LexEiffel.cpp' || echo '$(srcdir)/'`scintilla/LexEiffel.cpp

LexEScript.o: scintilla/LexEScript.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexEScript.o -MD -MP -MF "$(DEPDIR)/LexEScript.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexEScript.o `test -f 'scintilla/LexEScript.cpp' || echo '$(srcdir)/'`scintilla/LexEScript.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexEScript.Tpo" "$(DEPDIR)/LexEScript.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexEScript.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexEScript.cpp' object='LexEScript.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexEScript.Po' tmpdepfile='$(DEPDIR)/LexEScript.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexEScript.o `test -f 'scintilla/LexEScript.cpp' || echo '$(srcdir)/'`scintilla/LexEScript.cpp

LexEScript.obj: scintilla/LexEScript.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexEScript.obj -MD -MP -MF "$(DEPDIR)/LexEScript.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexEScript.obj `if test -f 'scintilla/LexEScript.cpp'; then $(CYGPATH_W) 'scintilla/LexEScript.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexEScript.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexEScript.Tpo" "$(DEPDIR)/LexEScript.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexEScript.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexEScript.cpp' object='LexEScript.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexEScript.Po' tmpdepfile='$(DEPDIR)/LexEScript.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexEScript.obj `if test -f 'scintilla/LexEScript.cpp'; then $(CYGPATH_W) 'scintilla/LexEScript.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexEScript.cpp'; fi`

LexEScript.lo: scintilla/LexEScript.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexEScript.lo -MD -MP -MF "$(DEPDIR)/LexEScript.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexEScript.lo `test -f 'scintilla/LexEScript.cpp' || echo '$(srcdir)/'`scintilla/LexEScript.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexEScript.Tpo" "$(DEPDIR)/LexEScript.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexEScript.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexEScript.cpp' object='LexEScript.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexEScript.Plo' tmpdepfile='$(DEPDIR)/LexEScript.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexEScript.lo `test -f 'scintilla/LexEScript.cpp' || echo '$(srcdir)/'`scintilla/LexEScript.cpp

LexFortran.o: scintilla/LexFortran.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexFortran.o -MD -MP -MF "$(DEPDIR)/LexFortran.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexFortran.o `test -f 'scintilla/LexFortran.cpp' || echo '$(srcdir)/'`scintilla/LexFortran.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexFortran.Tpo" "$(DEPDIR)/LexFortran.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexFortran.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexFortran.cpp' object='LexFortran.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexFortran.Po' tmpdepfile='$(DEPDIR)/LexFortran.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexFortran.o `test -f 'scintilla/LexFortran.cpp' || echo '$(srcdir)/'`scintilla/LexFortran.cpp

LexFortran.obj: scintilla/LexFortran.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexFortran.obj -MD -MP -MF "$(DEPDIR)/LexFortran.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexFortran.obj `if test -f 'scintilla/LexFortran.cpp'; then $(CYGPATH_W) 'scintilla/LexFortran.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexFortran.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexFortran.Tpo" "$(DEPDIR)/LexFortran.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexFortran.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexFortran.cpp' object='LexFortran.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexFortran.Po' tmpdepfile='$(DEPDIR)/LexFortran.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexFortran.obj `if test -f 'scintilla/LexFortran.cpp'; then $(CYGPATH_W) 'scintilla/LexFortran.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexFortran.cpp'; fi`

LexFortran.lo: scintilla/LexFortran.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexFortran.lo -MD -MP -MF "$(DEPDIR)/LexFortran.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexFortran.lo `test -f 'scintilla/LexFortran.cpp' || echo '$(srcdir)/'`scintilla/LexFortran.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexFortran.Tpo" "$(DEPDIR)/LexFortran.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexFortran.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexFortran.cpp' object='LexFortran.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexFortran.Plo' tmpdepfile='$(DEPDIR)/LexFortran.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexFortran.lo `test -f 'scintilla/LexFortran.cpp' || echo '$(srcdir)/'`scintilla/LexFortran.cpp

LexHTML.o: scintilla/LexHTML.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexHTML.o -MD -MP -MF "$(DEPDIR)/LexHTML.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexHTML.o `test -f 'scintilla/LexHTML.cpp' || echo '$(srcdir)/'`scintilla/LexHTML.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexHTML.Tpo" "$(DEPDIR)/LexHTML.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexHTML.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexHTML.cpp' object='LexHTML.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexHTML.Po' tmpdepfile='$(DEPDIR)/LexHTML.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexHTML.o `test -f 'scintilla/LexHTML.cpp' || echo '$(srcdir)/'`scintilla/LexHTML.cpp

LexHTML.obj: scintilla/LexHTML.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexHTML.obj -MD -MP -MF "$(DEPDIR)/LexHTML.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexHTML.obj `if test -f 'scintilla/LexHTML.cpp'; then $(CYGPATH_W) 'scintilla/LexHTML.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexHTML.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexHTML.Tpo" "$(DEPDIR)/LexHTML.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexHTML.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexHTML.cpp' object='LexHTML.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexHTML.Po' tmpdepfile='$(DEPDIR)/LexHTML.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexHTML.obj `if test -f 'scintilla/LexHTML.cpp'; then $(CYGPATH_W) 'scintilla/LexHTML.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexHTML.cpp'; fi`

LexHTML.lo: scintilla/LexHTML.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexHTML.lo -MD -MP -MF "$(DEPDIR)/LexHTML.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexHTML.lo `test -f 'scintilla/LexHTML.cpp' || echo '$(srcdir)/'`scintilla/LexHTML.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexHTML.Tpo" "$(DEPDIR)/LexHTML.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexHTML.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexHTML.cpp' object='LexHTML.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexHTML.Plo' tmpdepfile='$(DEPDIR)/LexHTML.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexHTML.lo `test -f 'scintilla/LexHTML.cpp' || echo '$(srcdir)/'`scintilla/LexHTML.cpp

LexLisp.o: scintilla/LexLisp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLisp.o -MD -MP -MF "$(DEPDIR)/LexLisp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexLisp.o `test -f 'scintilla/LexLisp.cpp' || echo '$(srcdir)/'`scintilla/LexLisp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexLisp.Tpo" "$(DEPDIR)/LexLisp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexLisp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexLisp.cpp' object='LexLisp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexLisp.Po' tmpdepfile='$(DEPDIR)/LexLisp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLisp.o `test -f 'scintilla/LexLisp.cpp' || echo '$(srcdir)/'`scintilla/LexLisp.cpp

LexLisp.obj: scintilla/LexLisp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLisp.obj -MD -MP -MF "$(DEPDIR)/LexLisp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexLisp.obj `if test -f 'scintilla/LexLisp.cpp'; then $(CYGPATH_W) 'scintilla/LexLisp.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexLisp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexLisp.Tpo" "$(DEPDIR)/LexLisp.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexLisp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexLisp.cpp' object='LexLisp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexLisp.Po' tmpdepfile='$(DEPDIR)/LexLisp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLisp.obj `if test -f 'scintilla/LexLisp.cpp'; then $(CYGPATH_W) 'scintilla/LexLisp.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexLisp.cpp'; fi`

LexLisp.lo: scintilla/LexLisp.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLisp.lo -MD -MP -MF "$(DEPDIR)/LexLisp.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexLisp.lo `test -f 'scintilla/LexLisp.cpp' || echo '$(srcdir)/'`scintilla/LexLisp.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexLisp.Tpo" "$(DEPDIR)/LexLisp.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexLisp.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexLisp.cpp' object='LexLisp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexLisp.Plo' tmpdepfile='$(DEPDIR)/LexLisp.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLisp.lo `test -f 'scintilla/LexLisp.cpp' || echo '$(srcdir)/'`scintilla/LexLisp.cpp

LexLout.o: scintilla/LexLout.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLout.o -MD -MP -MF "$(DEPDIR)/LexLout.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexLout.o `test -f 'scintilla/LexLout.cpp' || echo '$(srcdir)/'`scintilla/LexLout.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexLout.Tpo" "$(DEPDIR)/LexLout.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexLout.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexLout.cpp' object='LexLout.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexLout.Po' tmpdepfile='$(DEPDIR)/LexLout.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLout.o `test -f 'scintilla/LexLout.cpp' || echo '$(srcdir)/'`scintilla/LexLout.cpp

LexLout.obj: scintilla/LexLout.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLout.obj -MD -MP -MF "$(DEPDIR)/LexLout.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexLout.obj `if test -f 'scintilla/LexLout.cpp'; then $(CYGPATH_W) 'scintilla/LexLout.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexLout.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexLout.Tpo" "$(DEPDIR)/LexLout.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexLout.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexLout.cpp' object='LexLout.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexLout.Po' tmpdepfile='$(DEPDIR)/LexLout.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLout.obj `if test -f 'scintilla/LexLout.cpp'; then $(CYGPATH_W) 'scintilla/LexLout.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexLout.cpp'; fi`

LexLout.lo: scintilla/LexLout.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLout.lo -MD -MP -MF "$(DEPDIR)/LexLout.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexLout.lo `test -f 'scintilla/LexLout.cpp' || echo '$(srcdir)/'`scintilla/LexLout.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexLout.Tpo" "$(DEPDIR)/LexLout.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexLout.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexLout.cpp' object='LexLout.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexLout.Plo' tmpdepfile='$(DEPDIR)/LexLout.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLout.lo `test -f 'scintilla/LexLout.cpp' || echo '$(srcdir)/'`scintilla/LexLout.cpp

LexLua.o: scintilla/LexLua.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLua.o -MD -MP -MF "$(DEPDIR)/LexLua.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexLua.o `test -f 'scintilla/LexLua.cpp' || echo '$(srcdir)/'`scintilla/LexLua.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexLua.Tpo" "$(DEPDIR)/LexLua.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexLua.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexLua.cpp' object='LexLua.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexLua.Po' tmpdepfile='$(DEPDIR)/LexLua.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLua.o `test -f 'scintilla/LexLua.cpp' || echo '$(srcdir)/'`scintilla/LexLua.cpp

LexLua.obj: scintilla/LexLua.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLua.obj -MD -MP -MF "$(DEPDIR)/LexLua.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexLua.obj `if test -f 'scintilla/LexLua.cpp'; then $(CYGPATH_W) 'scintilla/LexLua.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexLua.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexLua.Tpo" "$(DEPDIR)/LexLua.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexLua.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexLua.cpp' object='LexLua.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexLua.Po' tmpdepfile='$(DEPDIR)/LexLua.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLua.obj `if test -f 'scintilla/LexLua.cpp'; then $(CYGPATH_W) 'scintilla/LexLua.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexLua.cpp'; fi`

LexLua.lo: scintilla/LexLua.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexLua.lo -MD -MP -MF "$(DEPDIR)/LexLua.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexLua.lo `test -f 'scintilla/LexLua.cpp' || echo '$(srcdir)/'`scintilla/LexLua.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexLua.Tpo" "$(DEPDIR)/LexLua.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexLua.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexLua.cpp' object='LexLua.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexLua.Plo' tmpdepfile='$(DEPDIR)/LexLua.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexLua.lo `test -f 'scintilla/LexLua.cpp' || echo '$(srcdir)/'`scintilla/LexLua.cpp

LexMatlab.o: scintilla/LexMatlab.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexMatlab.o -MD -MP -MF "$(DEPDIR)/LexMatlab.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexMatlab.o `test -f 'scintilla/LexMatlab.cpp' || echo '$(srcdir)/'`scintilla/LexMatlab.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexMatlab.Tpo" "$(DEPDIR)/LexMatlab.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexMatlab.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexMatlab.cpp' object='LexMatlab.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexMatlab.Po' tmpdepfile='$(DEPDIR)/LexMatlab.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexMatlab.o `test -f 'scintilla/LexMatlab.cpp' || echo '$(srcdir)/'`scintilla/LexMatlab.cpp

LexMatlab.obj: scintilla/LexMatlab.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexMatlab.obj -MD -MP -MF "$(DEPDIR)/LexMatlab.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexMatlab.obj `if test -f 'scintilla/LexMatlab.cpp'; then $(CYGPATH_W) 'scintilla/LexMatlab.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexMatlab.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexMatlab.Tpo" "$(DEPDIR)/LexMatlab.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexMatlab.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexMatlab.cpp' object='LexMatlab.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexMatlab.Po' tmpdepfile='$(DEPDIR)/LexMatlab.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexMatlab.obj `if test -f 'scintilla/LexMatlab.cpp'; then $(CYGPATH_W) 'scintilla/LexMatlab.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexMatlab.cpp'; fi`

LexMatlab.lo: scintilla/LexMatlab.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexMatlab.lo -MD -MP -MF "$(DEPDIR)/LexMatlab.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexMatlab.lo `test -f 'scintilla/LexMatlab.cpp' || echo '$(srcdir)/'`scintilla/LexMatlab.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexMatlab.Tpo" "$(DEPDIR)/LexMatlab.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexMatlab.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexMatlab.cpp' object='LexMatlab.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexMatlab.Plo' tmpdepfile='$(DEPDIR)/LexMatlab.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexMatlab.lo `test -f 'scintilla/LexMatlab.cpp' || echo '$(srcdir)/'`scintilla/LexMatlab.cpp

LexOthers.o: scintilla/LexOthers.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexOthers.o -MD -MP -MF "$(DEPDIR)/LexOthers.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexOthers.o `test -f 'scintilla/LexOthers.cpp' || echo '$(srcdir)/'`scintilla/LexOthers.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexOthers.Tpo" "$(DEPDIR)/LexOthers.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexOthers.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexOthers.cpp' object='LexOthers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexOthers.Po' tmpdepfile='$(DEPDIR)/LexOthers.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexOthers.o `test -f 'scintilla/LexOthers.cpp' || echo '$(srcdir)/'`scintilla/LexOthers.cpp

LexOthers.obj: scintilla/LexOthers.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexOthers.obj -MD -MP -MF "$(DEPDIR)/LexOthers.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexOthers.obj `if test -f 'scintilla/LexOthers.cpp'; then $(CYGPATH_W) 'scintilla/LexOthers.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexOthers.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexOthers.Tpo" "$(DEPDIR)/LexOthers.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexOthers.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexOthers.cpp' object='LexOthers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexOthers.Po' tmpdepfile='$(DEPDIR)/LexOthers.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexOthers.obj `if test -f 'scintilla/LexOthers.cpp'; then $(CYGPATH_W) 'scintilla/LexOthers.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexOthers.cpp'; fi`

LexOthers.lo: scintilla/LexOthers.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexOthers.lo -MD -MP -MF "$(DEPDIR)/LexOthers.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexOthers.lo `test -f 'scintilla/LexOthers.cpp' || echo '$(srcdir)/'`scintilla/LexOthers.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexOthers.Tpo" "$(DEPDIR)/LexOthers.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexOthers.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexOthers.cpp' object='LexOthers.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexOthers.Plo' tmpdepfile='$(DEPDIR)/LexOthers.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexOthers.lo `test -f 'scintilla/LexOthers.cpp' || echo '$(srcdir)/'`scintilla/LexOthers.cpp

LexPascal.o: scintilla/LexPascal.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPascal.o -MD -MP -MF "$(DEPDIR)/LexPascal.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPascal.o `test -f 'scintilla/LexPascal.cpp' || echo '$(srcdir)/'`scintilla/LexPascal.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPascal.Tpo" "$(DEPDIR)/LexPascal.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPascal.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPascal.cpp' object='LexPascal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPascal.Po' tmpdepfile='$(DEPDIR)/LexPascal.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPascal.o `test -f 'scintilla/LexPascal.cpp' || echo '$(srcdir)/'`scintilla/LexPascal.cpp

LexPascal.obj: scintilla/LexPascal.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPascal.obj -MD -MP -MF "$(DEPDIR)/LexPascal.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPascal.obj `if test -f 'scintilla/LexPascal.cpp'; then $(CYGPATH_W) 'scintilla/LexPascal.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexPascal.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPascal.Tpo" "$(DEPDIR)/LexPascal.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPascal.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPascal.cpp' object='LexPascal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPascal.Po' tmpdepfile='$(DEPDIR)/LexPascal.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPascal.obj `if test -f 'scintilla/LexPascal.cpp'; then $(CYGPATH_W) 'scintilla/LexPascal.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexPascal.cpp'; fi`

LexPascal.lo: scintilla/LexPascal.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPascal.lo -MD -MP -MF "$(DEPDIR)/LexPascal.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPascal.lo `test -f 'scintilla/LexPascal.cpp' || echo '$(srcdir)/'`scintilla/LexPascal.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPascal.Tpo" "$(DEPDIR)/LexPascal.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPascal.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPascal.cpp' object='LexPascal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPascal.Plo' tmpdepfile='$(DEPDIR)/LexPascal.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPascal.lo `test -f 'scintilla/LexPascal.cpp' || echo '$(srcdir)/'`scintilla/LexPascal.cpp

LexPerl.o: scintilla/LexPerl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPerl.o -MD -MP -MF "$(DEPDIR)/LexPerl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPerl.o `test -f 'scintilla/LexPerl.cpp' || echo '$(srcdir)/'`scintilla/LexPerl.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPerl.Tpo" "$(DEPDIR)/LexPerl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPerl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPerl.cpp' object='LexPerl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPerl.Po' tmpdepfile='$(DEPDIR)/LexPerl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPerl.o `test -f 'scintilla/LexPerl.cpp' || echo '$(srcdir)/'`scintilla/LexPerl.cpp

LexPerl.obj: scintilla/LexPerl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPerl.obj -MD -MP -MF "$(DEPDIR)/LexPerl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPerl.obj `if test -f 'scintilla/LexPerl.cpp'; then $(CYGPATH_W) 'scintilla/LexPerl.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexPerl.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPerl.Tpo" "$(DEPDIR)/LexPerl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPerl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPerl.cpp' object='LexPerl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPerl.Po' tmpdepfile='$(DEPDIR)/LexPerl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPerl.obj `if test -f 'scintilla/LexPerl.cpp'; then $(CYGPATH_W) 'scintilla/LexPerl.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexPerl.cpp'; fi`

LexPerl.lo: scintilla/LexPerl.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPerl.lo -MD -MP -MF "$(DEPDIR)/LexPerl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPerl.lo `test -f 'scintilla/LexPerl.cpp' || echo '$(srcdir)/'`scintilla/LexPerl.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPerl.Tpo" "$(DEPDIR)/LexPerl.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPerl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPerl.cpp' object='LexPerl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPerl.Plo' tmpdepfile='$(DEPDIR)/LexPerl.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPerl.lo `test -f 'scintilla/LexPerl.cpp' || echo '$(srcdir)/'`scintilla/LexPerl.cpp

LexPOV.o: scintilla/LexPOV.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPOV.o -MD -MP -MF "$(DEPDIR)/LexPOV.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPOV.o `test -f 'scintilla/LexPOV.cpp' || echo '$(srcdir)/'`scintilla/LexPOV.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPOV.Tpo" "$(DEPDIR)/LexPOV.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPOV.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPOV.cpp' object='LexPOV.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPOV.Po' tmpdepfile='$(DEPDIR)/LexPOV.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPOV.o `test -f 'scintilla/LexPOV.cpp' || echo '$(srcdir)/'`scintilla/LexPOV.cpp

LexPOV.obj: scintilla/LexPOV.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPOV.obj -MD -MP -MF "$(DEPDIR)/LexPOV.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPOV.obj `if test -f 'scintilla/LexPOV.cpp'; then $(CYGPATH_W) 'scintilla/LexPOV.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexPOV.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPOV.Tpo" "$(DEPDIR)/LexPOV.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPOV.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPOV.cpp' object='LexPOV.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPOV.Po' tmpdepfile='$(DEPDIR)/LexPOV.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPOV.obj `if test -f 'scintilla/LexPOV.cpp'; then $(CYGPATH_W) 'scintilla/LexPOV.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexPOV.cpp'; fi`

LexPOV.lo: scintilla/LexPOV.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPOV.lo -MD -MP -MF "$(DEPDIR)/LexPOV.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPOV.lo `test -f 'scintilla/LexPOV.cpp' || echo '$(srcdir)/'`scintilla/LexPOV.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPOV.Tpo" "$(DEPDIR)/LexPOV.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPOV.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPOV.cpp' object='LexPOV.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPOV.Plo' tmpdepfile='$(DEPDIR)/LexPOV.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPOV.lo `test -f 'scintilla/LexPOV.cpp' || echo '$(srcdir)/'`scintilla/LexPOV.cpp

LexPython.o: scintilla/LexPython.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPython.o -MD -MP -MF "$(DEPDIR)/LexPython.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPython.o `test -f 'scintilla/LexPython.cpp' || echo '$(srcdir)/'`scintilla/LexPython.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPython.Tpo" "$(DEPDIR)/LexPython.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPython.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPython.cpp' object='LexPython.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPython.Po' tmpdepfile='$(DEPDIR)/LexPython.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPython.o `test -f 'scintilla/LexPython.cpp' || echo '$(srcdir)/'`scintilla/LexPython.cpp

LexPython.obj: scintilla/LexPython.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPython.obj -MD -MP -MF "$(DEPDIR)/LexPython.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPython.obj `if test -f 'scintilla/LexPython.cpp'; then $(CYGPATH_W) 'scintilla/LexPython.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexPython.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPython.Tpo" "$(DEPDIR)/LexPython.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPython.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPython.cpp' object='LexPython.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPython.Po' tmpdepfile='$(DEPDIR)/LexPython.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPython.obj `if test -f 'scintilla/LexPython.cpp'; then $(CYGPATH_W) 'scintilla/LexPython.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexPython.cpp'; fi`

LexPython.lo: scintilla/LexPython.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexPython.lo -MD -MP -MF "$(DEPDIR)/LexPython.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexPython.lo `test -f 'scintilla/LexPython.cpp' || echo '$(srcdir)/'`scintilla/LexPython.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexPython.Tpo" "$(DEPDIR)/LexPython.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexPython.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexPython.cpp' object='LexPython.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexPython.Plo' tmpdepfile='$(DEPDIR)/LexPython.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexPython.lo `test -f 'scintilla/LexPython.cpp' || echo '$(srcdir)/'`scintilla/LexPython.cpp

LexRuby.o: scintilla/LexRuby.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexRuby.o -MD -MP -MF "$(DEPDIR)/LexRuby.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexRuby.o `test -f 'scintilla/LexRuby.cpp' || echo '$(srcdir)/'`scintilla/LexRuby.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexRuby.Tpo" "$(DEPDIR)/LexRuby.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexRuby.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexRuby.cpp' object='LexRuby.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexRuby.Po' tmpdepfile='$(DEPDIR)/LexRuby.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexRuby.o `test -f 'scintilla/LexRuby.cpp' || echo '$(srcdir)/'`scintilla/LexRuby.cpp

LexRuby.obj: scintilla/LexRuby.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexRuby.obj -MD -MP -MF "$(DEPDIR)/LexRuby.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexRuby.obj `if test -f 'scintilla/LexRuby.cpp'; then $(CYGPATH_W) 'scintilla/LexRuby.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexRuby.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexRuby.Tpo" "$(DEPDIR)/LexRuby.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexRuby.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexRuby.cpp' object='LexRuby.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexRuby.Po' tmpdepfile='$(DEPDIR)/LexRuby.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexRuby.obj `if test -f 'scintilla/LexRuby.cpp'; then $(CYGPATH_W) 'scintilla/LexRuby.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexRuby.cpp'; fi`

LexRuby.lo: scintilla/LexRuby.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexRuby.lo -MD -MP -MF "$(DEPDIR)/LexRuby.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexRuby.lo `test -f 'scintilla/LexRuby.cpp' || echo '$(srcdir)/'`scintilla/LexRuby.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexRuby.Tpo" "$(DEPDIR)/LexRuby.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexRuby.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexRuby.cpp' object='LexRuby.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexRuby.Plo' tmpdepfile='$(DEPDIR)/LexRuby.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexRuby.lo `test -f 'scintilla/LexRuby.cpp' || echo '$(srcdir)/'`scintilla/LexRuby.cpp

LexSQL.o: scintilla/LexSQL.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexSQL.o -MD -MP -MF "$(DEPDIR)/LexSQL.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexSQL.o `test -f 'scintilla/LexSQL.cpp' || echo '$(srcdir)/'`scintilla/LexSQL.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexSQL.Tpo" "$(DEPDIR)/LexSQL.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexSQL.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexSQL.cpp' object='LexSQL.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexSQL.Po' tmpdepfile='$(DEPDIR)/LexSQL.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexSQL.o `test -f 'scintilla/LexSQL.cpp' || echo '$(srcdir)/'`scintilla/LexSQL.cpp

LexSQL.obj: scintilla/LexSQL.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexSQL.obj -MD -MP -MF "$(DEPDIR)/LexSQL.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexSQL.obj `if test -f 'scintilla/LexSQL.cpp'; then $(CYGPATH_W) 'scintilla/LexSQL.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexSQL.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexSQL.Tpo" "$(DEPDIR)/LexSQL.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexSQL.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexSQL.cpp' object='LexSQL.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexSQL.Po' tmpdepfile='$(DEPDIR)/LexSQL.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexSQL.obj `if test -f 'scintilla/LexSQL.cpp'; then $(CYGPATH_W) 'scintilla/LexSQL.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexSQL.cpp'; fi`

LexSQL.lo: scintilla/LexSQL.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexSQL.lo -MD -MP -MF "$(DEPDIR)/LexSQL.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexSQL.lo `test -f 'scintilla/LexSQL.cpp' || echo '$(srcdir)/'`scintilla/LexSQL.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexSQL.Tpo" "$(DEPDIR)/LexSQL.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexSQL.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexSQL.cpp' object='LexSQL.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexSQL.Plo' tmpdepfile='$(DEPDIR)/LexSQL.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexSQL.lo `test -f 'scintilla/LexSQL.cpp' || echo '$(srcdir)/'`scintilla/LexSQL.cpp

LexVB.o: scintilla/LexVB.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexVB.o -MD -MP -MF "$(DEPDIR)/LexVB.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexVB.o `test -f 'scintilla/LexVB.cpp' || echo '$(srcdir)/'`scintilla/LexVB.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexVB.Tpo" "$(DEPDIR)/LexVB.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexVB.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexVB.cpp' object='LexVB.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexVB.Po' tmpdepfile='$(DEPDIR)/LexVB.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexVB.o `test -f 'scintilla/LexVB.cpp' || echo '$(srcdir)/'`scintilla/LexVB.cpp

LexVB.obj: scintilla/LexVB.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexVB.obj -MD -MP -MF "$(DEPDIR)/LexVB.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexVB.obj `if test -f 'scintilla/LexVB.cpp'; then $(CYGPATH_W) 'scintilla/LexVB.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexVB.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexVB.Tpo" "$(DEPDIR)/LexVB.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexVB.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexVB.cpp' object='LexVB.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexVB.Po' tmpdepfile='$(DEPDIR)/LexVB.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexVB.obj `if test -f 'scintilla/LexVB.cpp'; then $(CYGPATH_W) 'scintilla/LexVB.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LexVB.cpp'; fi`

LexVB.lo: scintilla/LexVB.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LexVB.lo -MD -MP -MF "$(DEPDIR)/LexVB.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LexVB.lo `test -f 'scintilla/LexVB.cpp' || echo '$(srcdir)/'`scintilla/LexVB.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LexVB.Tpo" "$(DEPDIR)/LexVB.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LexVB.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LexVB.cpp' object='LexVB.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LexVB.Plo' tmpdepfile='$(DEPDIR)/LexVB.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LexVB.lo `test -f 'scintilla/LexVB.cpp' || echo '$(srcdir)/'`scintilla/LexVB.cpp

LineMarker.o: scintilla/LineMarker.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LineMarker.o -MD -MP -MF "$(DEPDIR)/LineMarker.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LineMarker.o `test -f 'scintilla/LineMarker.cpp' || echo '$(srcdir)/'`scintilla/LineMarker.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LineMarker.Tpo" "$(DEPDIR)/LineMarker.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LineMarker.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LineMarker.cpp' object='LineMarker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LineMarker.Po' tmpdepfile='$(DEPDIR)/LineMarker.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LineMarker.o `test -f 'scintilla/LineMarker.cpp' || echo '$(srcdir)/'`scintilla/LineMarker.cpp

LineMarker.obj: scintilla/LineMarker.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LineMarker.obj -MD -MP -MF "$(DEPDIR)/LineMarker.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LineMarker.obj `if test -f 'scintilla/LineMarker.cpp'; then $(CYGPATH_W) 'scintilla/LineMarker.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LineMarker.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LineMarker.Tpo" "$(DEPDIR)/LineMarker.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LineMarker.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LineMarker.cpp' object='LineMarker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LineMarker.Po' tmpdepfile='$(DEPDIR)/LineMarker.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LineMarker.obj `if test -f 'scintilla/LineMarker.cpp'; then $(CYGPATH_W) 'scintilla/LineMarker.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/LineMarker.cpp'; fi`

LineMarker.lo: scintilla/LineMarker.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LineMarker.lo -MD -MP -MF "$(DEPDIR)/LineMarker.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LineMarker.lo `test -f 'scintilla/LineMarker.cpp' || echo '$(srcdir)/'`scintilla/LineMarker.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LineMarker.Tpo" "$(DEPDIR)/LineMarker.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LineMarker.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/LineMarker.cpp' object='LineMarker.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LineMarker.Plo' tmpdepfile='$(DEPDIR)/LineMarker.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LineMarker.lo `test -f 'scintilla/LineMarker.cpp' || echo '$(srcdir)/'`scintilla/LineMarker.cpp

PropSet.o: scintilla/PropSet.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PropSet.o -MD -MP -MF "$(DEPDIR)/PropSet.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o PropSet.o `test -f 'scintilla/PropSet.cpp' || echo '$(srcdir)/'`scintilla/PropSet.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/PropSet.Tpo" "$(DEPDIR)/PropSet.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/PropSet.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/PropSet.cpp' object='PropSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PropSet.Po' tmpdepfile='$(DEPDIR)/PropSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PropSet.o `test -f 'scintilla/PropSet.cpp' || echo '$(srcdir)/'`scintilla/PropSet.cpp

PropSet.obj: scintilla/PropSet.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PropSet.obj -MD -MP -MF "$(DEPDIR)/PropSet.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o PropSet.obj `if test -f 'scintilla/PropSet.cpp'; then $(CYGPATH_W) 'scintilla/PropSet.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/PropSet.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/PropSet.Tpo" "$(DEPDIR)/PropSet.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/PropSet.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/PropSet.cpp' object='PropSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PropSet.Po' tmpdepfile='$(DEPDIR)/PropSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PropSet.obj `if test -f 'scintilla/PropSet.cpp'; then $(CYGPATH_W) 'scintilla/PropSet.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/PropSet.cpp'; fi`

PropSet.lo: scintilla/PropSet.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT PropSet.lo -MD -MP -MF "$(DEPDIR)/PropSet.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o PropSet.lo `test -f 'scintilla/PropSet.cpp' || echo '$(srcdir)/'`scintilla/PropSet.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/PropSet.Tpo" "$(DEPDIR)/PropSet.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/PropSet.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/PropSet.cpp' object='PropSet.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/PropSet.Plo' tmpdepfile='$(DEPDIR)/PropSet.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PropSet.lo `test -f 'scintilla/PropSet.cpp' || echo '$(srcdir)/'`scintilla/PropSet.cpp

RESearch.o: scintilla/RESearch.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RESearch.o -MD -MP -MF "$(DEPDIR)/RESearch.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o RESearch.o `test -f 'scintilla/RESearch.cpp' || echo '$(srcdir)/'`scintilla/RESearch.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/RESearch.Tpo" "$(DEPDIR)/RESearch.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/RESearch.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/RESearch.cpp' object='RESearch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/RESearch.Po' tmpdepfile='$(DEPDIR)/RESearch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RESearch.o `test -f 'scintilla/RESearch.cpp' || echo '$(srcdir)/'`scintilla/RESearch.cpp

RESearch.obj: scintilla/RESearch.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RESearch.obj -MD -MP -MF "$(DEPDIR)/RESearch.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o RESearch.obj `if test -f 'scintilla/RESearch.cpp'; then $(CYGPATH_W) 'scintilla/RESearch.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/RESearch.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/RESearch.Tpo" "$(DEPDIR)/RESearch.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/RESearch.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/RESearch.cpp' object='RESearch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/RESearch.Po' tmpdepfile='$(DEPDIR)/RESearch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RESearch.obj `if test -f 'scintilla/RESearch.cpp'; then $(CYGPATH_W) 'scintilla/RESearch.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/RESearch.cpp'; fi`

RESearch.lo: scintilla/RESearch.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RESearch.lo -MD -MP -MF "$(DEPDIR)/RESearch.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o RESearch.lo `test -f 'scintilla/RESearch.cpp' || echo '$(srcdir)/'`scintilla/RESearch.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/RESearch.Tpo" "$(DEPDIR)/RESearch.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/RESearch.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/RESearch.cpp' object='RESearch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/RESearch.Plo' tmpdepfile='$(DEPDIR)/RESearch.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RESearch.lo `test -f 'scintilla/RESearch.cpp' || echo '$(srcdir)/'`scintilla/RESearch.cpp

ScintillaBase.o: scintilla/ScintillaBase.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScintillaBase.o -MD -MP -MF "$(DEPDIR)/ScintillaBase.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ScintillaBase.o `test -f 'scintilla/ScintillaBase.cpp' || echo '$(srcdir)/'`scintilla/ScintillaBase.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ScintillaBase.Tpo" "$(DEPDIR)/ScintillaBase.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ScintillaBase.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ScintillaBase.cpp' object='ScintillaBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ScintillaBase.Po' tmpdepfile='$(DEPDIR)/ScintillaBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScintillaBase.o `test -f 'scintilla/ScintillaBase.cpp' || echo '$(srcdir)/'`scintilla/ScintillaBase.cpp

ScintillaBase.obj: scintilla/ScintillaBase.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScintillaBase.obj -MD -MP -MF "$(DEPDIR)/ScintillaBase.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ScintillaBase.obj `if test -f 'scintilla/ScintillaBase.cpp'; then $(CYGPATH_W) 'scintilla/ScintillaBase.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/ScintillaBase.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ScintillaBase.Tpo" "$(DEPDIR)/ScintillaBase.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ScintillaBase.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ScintillaBase.cpp' object='ScintillaBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ScintillaBase.Po' tmpdepfile='$(DEPDIR)/ScintillaBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScintillaBase.obj `if test -f 'scintilla/ScintillaBase.cpp'; then $(CYGPATH_W) 'scintilla/ScintillaBase.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/ScintillaBase.cpp'; fi`

ScintillaBase.lo: scintilla/ScintillaBase.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ScintillaBase.lo -MD -MP -MF "$(DEPDIR)/ScintillaBase.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ScintillaBase.lo `test -f 'scintilla/ScintillaBase.cpp' || echo '$(srcdir)/'`scintilla/ScintillaBase.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ScintillaBase.Tpo" "$(DEPDIR)/ScintillaBase.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ScintillaBase.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ScintillaBase.cpp' object='ScintillaBase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ScintillaBase.Plo' tmpdepfile='$(DEPDIR)/ScintillaBase.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScintillaBase.lo `test -f 'scintilla/ScintillaBase.cpp' || echo '$(srcdir)/'`scintilla/ScintillaBase.cpp

Style.o: scintilla/Style.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Style.o -MD -MP -MF "$(DEPDIR)/Style.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Style.o `test -f 'scintilla/Style.cpp' || echo '$(srcdir)/'`scintilla/Style.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Style.Tpo" "$(DEPDIR)/Style.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Style.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Style.cpp' object='Style.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Style.Po' tmpdepfile='$(DEPDIR)/Style.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Style.o `test -f 'scintilla/Style.cpp' || echo '$(srcdir)/'`scintilla/Style.cpp

Style.obj: scintilla/Style.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Style.obj -MD -MP -MF "$(DEPDIR)/Style.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Style.obj `if test -f 'scintilla/Style.cpp'; then $(CYGPATH_W) 'scintilla/Style.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/Style.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Style.Tpo" "$(DEPDIR)/Style.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Style.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Style.cpp' object='Style.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Style.Po' tmpdepfile='$(DEPDIR)/Style.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Style.obj `if test -f 'scintilla/Style.cpp'; then $(CYGPATH_W) 'scintilla/Style.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/Style.cpp'; fi`

Style.lo: scintilla/Style.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Style.lo -MD -MP -MF "$(DEPDIR)/Style.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Style.lo `test -f 'scintilla/Style.cpp' || echo '$(srcdir)/'`scintilla/Style.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/Style.Tpo" "$(DEPDIR)/Style.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Style.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/Style.cpp' object='Style.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Style.Plo' tmpdepfile='$(DEPDIR)/Style.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Style.lo `test -f 'scintilla/Style.cpp' || echo '$(srcdir)/'`scintilla/Style.cpp

StyleContext.o: scintilla/StyleContext.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StyleContext.o -MD -MP -MF "$(DEPDIR)/StyleContext.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o StyleContext.o `test -f 'scintilla/StyleContext.cpp' || echo '$(srcdir)/'`scintilla/StyleContext.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/StyleContext.Tpo" "$(DEPDIR)/StyleContext.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/StyleContext.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/StyleContext.cpp' object='StyleContext.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/StyleContext.Po' tmpdepfile='$(DEPDIR)/StyleContext.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StyleContext.o `test -f 'scintilla/StyleContext.cpp' || echo '$(srcdir)/'`scintilla/StyleContext.cpp

StyleContext.obj: scintilla/StyleContext.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StyleContext.obj -MD -MP -MF "$(DEPDIR)/StyleContext.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o StyleContext.obj `if test -f 'scintilla/StyleContext.cpp'; then $(CYGPATH_W) 'scintilla/StyleContext.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/StyleContext.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/StyleContext.Tpo" "$(DEPDIR)/StyleContext.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/StyleContext.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/StyleContext.cpp' object='StyleContext.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/StyleContext.Po' tmpdepfile='$(DEPDIR)/StyleContext.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StyleContext.obj `if test -f 'scintilla/StyleContext.cpp'; then $(CYGPATH_W) 'scintilla/StyleContext.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/StyleContext.cpp'; fi`

StyleContext.lo: scintilla/StyleContext.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StyleContext.lo -MD -MP -MF "$(DEPDIR)/StyleContext.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o StyleContext.lo `test -f 'scintilla/StyleContext.cpp' || echo '$(srcdir)/'`scintilla/StyleContext.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/StyleContext.Tpo" "$(DEPDIR)/StyleContext.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/StyleContext.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/StyleContext.cpp' object='StyleContext.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/StyleContext.Plo' tmpdepfile='$(DEPDIR)/StyleContext.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StyleContext.lo `test -f 'scintilla/StyleContext.cpp' || echo '$(srcdir)/'`scintilla/StyleContext.cpp

UniConversion.o: scintilla/UniConversion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UniConversion.o -MD -MP -MF "$(DEPDIR)/UniConversion.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o UniConversion.o `test -f 'scintilla/UniConversion.cpp' || echo '$(srcdir)/'`scintilla/UniConversion.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/UniConversion.Tpo" "$(DEPDIR)/UniConversion.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/UniConversion.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/UniConversion.cpp' object='UniConversion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UniConversion.Po' tmpdepfile='$(DEPDIR)/UniConversion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UniConversion.o `test -f 'scintilla/UniConversion.cpp' || echo '$(srcdir)/'`scintilla/UniConversion.cpp

UniConversion.obj: scintilla/UniConversion.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UniConversion.obj -MD -MP -MF "$(DEPDIR)/UniConversion.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o UniConversion.obj `if test -f 'scintilla/UniConversion.cpp'; then $(CYGPATH_W) 'scintilla/UniConversion.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/UniConversion.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/UniConversion.Tpo" "$(DEPDIR)/UniConversion.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/UniConversion.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/UniConversion.cpp' object='UniConversion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UniConversion.Po' tmpdepfile='$(DEPDIR)/UniConversion.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UniConversion.obj `if test -f 'scintilla/UniConversion.cpp'; then $(CYGPATH_W) 'scintilla/UniConversion.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/UniConversion.cpp'; fi`

UniConversion.lo: scintilla/UniConversion.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UniConversion.lo -MD -MP -MF "$(DEPDIR)/UniConversion.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o UniConversion.lo `test -f 'scintilla/UniConversion.cpp' || echo '$(srcdir)/'`scintilla/UniConversion.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/UniConversion.Tpo" "$(DEPDIR)/UniConversion.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/UniConversion.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/UniConversion.cpp' object='UniConversion.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/UniConversion.Plo' tmpdepfile='$(DEPDIR)/UniConversion.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UniConversion.lo `test -f 'scintilla/UniConversion.cpp' || echo '$(srcdir)/'`scintilla/UniConversion.cpp

ViewStyle.o: scintilla/ViewStyle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ViewStyle.o -MD -MP -MF "$(DEPDIR)/ViewStyle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ViewStyle.o `test -f 'scintilla/ViewStyle.cpp' || echo '$(srcdir)/'`scintilla/ViewStyle.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ViewStyle.Tpo" "$(DEPDIR)/ViewStyle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ViewStyle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ViewStyle.cpp' object='ViewStyle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ViewStyle.Po' tmpdepfile='$(DEPDIR)/ViewStyle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ViewStyle.o `test -f 'scintilla/ViewStyle.cpp' || echo '$(srcdir)/'`scintilla/ViewStyle.cpp

ViewStyle.obj: scintilla/ViewStyle.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ViewStyle.obj -MD -MP -MF "$(DEPDIR)/ViewStyle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ViewStyle.obj `if test -f 'scintilla/ViewStyle.cpp'; then $(CYGPATH_W) 'scintilla/ViewStyle.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/ViewStyle.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ViewStyle.Tpo" "$(DEPDIR)/ViewStyle.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ViewStyle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ViewStyle.cpp' object='ViewStyle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ViewStyle.Po' tmpdepfile='$(DEPDIR)/ViewStyle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ViewStyle.obj `if test -f 'scintilla/ViewStyle.cpp'; then $(CYGPATH_W) 'scintilla/ViewStyle.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/ViewStyle.cpp'; fi`

ViewStyle.lo: scintilla/ViewStyle.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ViewStyle.lo -MD -MP -MF "$(DEPDIR)/ViewStyle.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ViewStyle.lo `test -f 'scintilla/ViewStyle.cpp' || echo '$(srcdir)/'`scintilla/ViewStyle.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/ViewStyle.Tpo" "$(DEPDIR)/ViewStyle.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ViewStyle.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/ViewStyle.cpp' object='ViewStyle.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ViewStyle.Plo' tmpdepfile='$(DEPDIR)/ViewStyle.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ViewStyle.lo `test -f 'scintilla/ViewStyle.cpp' || echo '$(srcdir)/'`scintilla/ViewStyle.cpp

WindowAccessor.o: scintilla/WindowAccessor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WindowAccessor.o -MD -MP -MF "$(DEPDIR)/WindowAccessor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o WindowAccessor.o `test -f 'scintilla/WindowAccessor.cpp' || echo '$(srcdir)/'`scintilla/WindowAccessor.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/WindowAccessor.Tpo" "$(DEPDIR)/WindowAccessor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/WindowAccessor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/WindowAccessor.cpp' object='WindowAccessor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/WindowAccessor.Po' tmpdepfile='$(DEPDIR)/WindowAccessor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WindowAccessor.o `test -f 'scintilla/WindowAccessor.cpp' || echo '$(srcdir)/'`scintilla/WindowAccessor.cpp

WindowAccessor.obj: scintilla/WindowAccessor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WindowAccessor.obj -MD -MP -MF "$(DEPDIR)/WindowAccessor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o WindowAccessor.obj `if test -f 'scintilla/WindowAccessor.cpp'; then $(CYGPATH_W) 'scintilla/WindowAccessor.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/WindowAccessor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/WindowAccessor.Tpo" "$(DEPDIR)/WindowAccessor.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/WindowAccessor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/WindowAccessor.cpp' object='WindowAccessor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/WindowAccessor.Po' tmpdepfile='$(DEPDIR)/WindowAccessor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WindowAccessor.obj `if test -f 'scintilla/WindowAccessor.cpp'; then $(CYGPATH_W) 'scintilla/WindowAccessor.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/WindowAccessor.cpp'; fi`

WindowAccessor.lo: scintilla/WindowAccessor.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WindowAccessor.lo -MD -MP -MF "$(DEPDIR)/WindowAccessor.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o WindowAccessor.lo `test -f 'scintilla/WindowAccessor.cpp' || echo '$(srcdir)/'`scintilla/WindowAccessor.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/WindowAccessor.Tpo" "$(DEPDIR)/WindowAccessor.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/WindowAccessor.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/WindowAccessor.cpp' object='WindowAccessor.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/WindowAccessor.Plo' tmpdepfile='$(DEPDIR)/WindowAccessor.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WindowAccessor.lo `test -f 'scintilla/WindowAccessor.cpp' || echo '$(srcdir)/'`scintilla/WindowAccessor.cpp

XPM.o: scintilla/XPM.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XPM.o -MD -MP -MF "$(DEPDIR)/XPM.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o XPM.o `test -f 'scintilla/XPM.cpp' || echo '$(srcdir)/'`scintilla/XPM.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/XPM.Tpo" "$(DEPDIR)/XPM.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/XPM.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/XPM.cpp' object='XPM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/XPM.Po' tmpdepfile='$(DEPDIR)/XPM.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XPM.o `test -f 'scintilla/XPM.cpp' || echo '$(srcdir)/'`scintilla/XPM.cpp

XPM.obj: scintilla/XPM.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XPM.obj -MD -MP -MF "$(DEPDIR)/XPM.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o XPM.obj `if test -f 'scintilla/XPM.cpp'; then $(CYGPATH_W) 'scintilla/XPM.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/XPM.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/XPM.Tpo" "$(DEPDIR)/XPM.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/XPM.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/XPM.cpp' object='XPM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/XPM.Po' tmpdepfile='$(DEPDIR)/XPM.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XPM.obj `if test -f 'scintilla/XPM.cpp'; then $(CYGPATH_W) 'scintilla/XPM.cpp'; else $(CYGPATH_W) '$(srcdir)/scintilla/XPM.cpp'; fi`

XPM.lo: scintilla/XPM.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XPM.lo -MD -MP -MF "$(DEPDIR)/XPM.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o XPM.lo `test -f 'scintilla/XPM.cpp' || echo '$(srcdir)/'`scintilla/XPM.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/XPM.Tpo" "$(DEPDIR)/XPM.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/XPM.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='scintilla/XPM.cpp' object='XPM.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/XPM.Plo' tmpdepfile='$(DEPDIR)/XPM.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XPM.lo `test -f 'scintilla/XPM.cpp' || echo '$(srcdir)/'`scintilla/XPM.cpp

dummy_moc.o: qextmdi/dummy_moc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dummy_moc.o -MD -MP -MF "$(DEPDIR)/dummy_moc.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o dummy_moc.o `test -f 'qextmdi/dummy_moc.cpp' || echo '$(srcdir)/'`qextmdi/dummy_moc.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/dummy_moc.Tpo" "$(DEPDIR)/dummy_moc.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/dummy_moc.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/dummy_moc.cpp' object='dummy_moc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/dummy_moc.Po' tmpdepfile='$(DEPDIR)/dummy_moc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dummy_moc.o `test -f 'qextmdi/dummy_moc.cpp' || echo '$(srcdir)/'`qextmdi/dummy_moc.cpp

dummy_moc.obj: qextmdi/dummy_moc.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dummy_moc.obj -MD -MP -MF "$(DEPDIR)/dummy_moc.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o dummy_moc.obj `if test -f 'qextmdi/dummy_moc.cpp'; then $(CYGPATH_W) 'qextmdi/dummy_moc.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/dummy_moc.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/dummy_moc.Tpo" "$(DEPDIR)/dummy_moc.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/dummy_moc.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/dummy_moc.cpp' object='dummy_moc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/dummy_moc.Po' tmpdepfile='$(DEPDIR)/dummy_moc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dummy_moc.obj `if test -f 'qextmdi/dummy_moc.cpp'; then $(CYGPATH_W) 'qextmdi/dummy_moc.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/dummy_moc.cpp'; fi`

dummy_moc.lo: qextmdi/dummy_moc.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dummy_moc.lo -MD -MP -MF "$(DEPDIR)/dummy_moc.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o dummy_moc.lo `test -f 'qextmdi/dummy_moc.cpp' || echo '$(srcdir)/'`qextmdi/dummy_moc.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/dummy_moc.Tpo" "$(DEPDIR)/dummy_moc.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/dummy_moc.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/dummy_moc.cpp' object='dummy_moc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/dummy_moc.Plo' tmpdepfile='$(DEPDIR)/dummy_moc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dummy_moc.lo `test -f 'qextmdi/dummy_moc.cpp' || echo '$(srcdir)/'`qextmdi/dummy_moc.cpp

kdocktabctl.o: qextmdi/kdocktabctl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kdocktabctl.o -MD -MP -MF "$(DEPDIR)/kdocktabctl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o kdocktabctl.o `test -f 'qextmdi/kdocktabctl.cpp' || echo '$(srcdir)/'`qextmdi/kdocktabctl.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/kdocktabctl.Tpo" "$(DEPDIR)/kdocktabctl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/kdocktabctl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/kdocktabctl.cpp' object='kdocktabctl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/kdocktabctl.Po' tmpdepfile='$(DEPDIR)/kdocktabctl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kdocktabctl.o `test -f 'qextmdi/kdocktabctl.cpp' || echo '$(srcdir)/'`qextmdi/kdocktabctl.cpp

kdocktabctl.obj: qextmdi/kdocktabctl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kdocktabctl.obj -MD -MP -MF "$(DEPDIR)/kdocktabctl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o kdocktabctl.obj `if test -f 'qextmdi/kdocktabctl.cpp'; then $(CYGPATH_W) 'qextmdi/kdocktabctl.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/kdocktabctl.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/kdocktabctl.Tpo" "$(DEPDIR)/kdocktabctl.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/kdocktabctl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/kdocktabctl.cpp' object='kdocktabctl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/kdocktabctl.Po' tmpdepfile='$(DEPDIR)/kdocktabctl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kdocktabctl.obj `if test -f 'qextmdi/kdocktabctl.cpp'; then $(CYGPATH_W) 'qextmdi/kdocktabctl.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/kdocktabctl.cpp'; fi`

kdocktabctl.lo: qextmdi/kdocktabctl.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kdocktabctl.lo -MD -MP -MF "$(DEPDIR)/kdocktabctl.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o kdocktabctl.lo `test -f 'qextmdi/kdocktabctl.cpp' || echo '$(srcdir)/'`qextmdi/kdocktabctl.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/kdocktabctl.Tpo" "$(DEPDIR)/kdocktabctl.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/kdocktabctl.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/kdocktabctl.cpp' object='kdocktabctl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/kdocktabctl.Plo' tmpdepfile='$(DEPDIR)/kdocktabctl.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kdocktabctl.lo `test -f 'qextmdi/kdocktabctl.cpp' || echo '$(srcdir)/'`qextmdi/kdocktabctl.cpp

kdockwidget.o: qextmdi/kdockwidget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kdockwidget.o -MD -MP -MF "$(DEPDIR)/kdockwidget.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o kdockwidget.o `test -f 'qextmdi/kdockwidget.cpp' || echo '$(srcdir)/'`qextmdi/kdockwidget.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/kdockwidget.Tpo" "$(DEPDIR)/kdockwidget.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/kdockwidget.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/kdockwidget.cpp' object='kdockwidget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/kdockwidget.Po' tmpdepfile='$(DEPDIR)/kdockwidget.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kdockwidget.o `test -f 'qextmdi/kdockwidget.cpp' || echo '$(srcdir)/'`qextmdi/kdockwidget.cpp

kdockwidget.obj: qextmdi/kdockwidget.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kdockwidget.obj -MD -MP -MF "$(DEPDIR)/kdockwidget.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o kdockwidget.obj `if test -f 'qextmdi/kdockwidget.cpp'; then $(CYGPATH_W) 'qextmdi/kdockwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/kdockwidget.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/kdockwidget.Tpo" "$(DEPDIR)/kdockwidget.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/kdockwidget.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/kdockwidget.cpp' object='kdockwidget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/kdockwidget.Po' tmpdepfile='$(DEPDIR)/kdockwidget.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kdockwidget.obj `if test -f 'qextmdi/kdockwidget.cpp'; then $(CYGPATH_W) 'qextmdi/kdockwidget.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/kdockwidget.cpp'; fi`

kdockwidget.lo: qextmdi/kdockwidget.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kdockwidget.lo -MD -MP -MF "$(DEPDIR)/kdockwidget.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o kdockwidget.lo `test -f 'qextmdi/kdockwidget.cpp' || echo '$(srcdir)/'`qextmdi/kdockwidget.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/kdockwidget.Tpo" "$(DEPDIR)/kdockwidget.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/kdockwidget.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/kdockwidget.cpp' object='kdockwidget.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/kdockwidget.Plo' tmpdepfile='$(DEPDIR)/kdockwidget.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kdockwidget.lo `test -f 'qextmdi/kdockwidget.cpp' || echo '$(srcdir)/'`qextmdi/kdockwidget.cpp

kdockwidget_private.o: qextmdi/kdockwidget_private.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kdockwidget_private.o -MD -MP -MF "$(DEPDIR)/kdockwidget_private.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o kdockwidget_private.o `test -f 'qextmdi/kdockwidget_private.cpp' || echo '$(srcdir)/'`qextmdi/kdockwidget_private.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/kdockwidget_private.Tpo" "$(DEPDIR)/kdockwidget_private.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/kdockwidget_private.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/kdockwidget_private.cpp' object='kdockwidget_private.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/kdockwidget_private.Po' tmpdepfile='$(DEPDIR)/kdockwidget_private.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kdockwidget_private.o `test -f 'qextmdi/kdockwidget_private.cpp' || echo '$(srcdir)/'`qextmdi/kdockwidget_private.cpp

kdockwidget_private.obj: qextmdi/kdockwidget_private.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kdockwidget_private.obj -MD -MP -MF "$(DEPDIR)/kdockwidget_private.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o kdockwidget_private.obj `if test -f 'qextmdi/kdockwidget_private.cpp'; then $(CYGPATH_W) 'qextmdi/kdockwidget_private.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/kdockwidget_private.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/kdockwidget_private.Tpo" "$(DEPDIR)/kdockwidget_private.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/kdockwidget_private.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/kdockwidget_private.cpp' object='kdockwidget_private.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/kdockwidget_private.Po' tmpdepfile='$(DEPDIR)/kdockwidget_private.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kdockwidget_private.obj `if test -f 'qextmdi/kdockwidget_private.cpp'; then $(CYGPATH_W) 'qextmdi/kdockwidget_private.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/kdockwidget_private.cpp'; fi`

kdockwidget_private.lo: qextmdi/kdockwidget_private.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT kdockwidget_private.lo -MD -MP -MF "$(DEPDIR)/kdockwidget_private.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o kdockwidget_private.lo `test -f 'qextmdi/kdockwidget_private.cpp' || echo '$(srcdir)/'`qextmdi/kdockwidget_private.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/kdockwidget_private.Tpo" "$(DEPDIR)/kdockwidget_private.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/kdockwidget_private.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/kdockwidget_private.cpp' object='kdockwidget_private.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/kdockwidget_private.Plo' tmpdepfile='$(DEPDIR)/kdockwidget_private.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o kdockwidget_private.lo `test -f 'qextmdi/kdockwidget_private.cpp' || echo '$(srcdir)/'`qextmdi/kdockwidget_private.cpp

qextmdichildarea.o: qextmdi/qextmdichildarea.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildarea.o -MD -MP -MF "$(DEPDIR)/qextmdichildarea.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildarea.o `test -f 'qextmdi/qextmdichildarea.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildarea.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildarea.Tpo" "$(DEPDIR)/qextmdichildarea.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildarea.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildarea.cpp' object='qextmdichildarea.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildarea.Po' tmpdepfile='$(DEPDIR)/qextmdichildarea.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildarea.o `test -f 'qextmdi/qextmdichildarea.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildarea.cpp

qextmdichildarea.obj: qextmdi/qextmdichildarea.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildarea.obj -MD -MP -MF "$(DEPDIR)/qextmdichildarea.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildarea.obj `if test -f 'qextmdi/qextmdichildarea.cpp'; then $(CYGPATH_W) 'qextmdi/qextmdichildarea.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmdichildarea.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildarea.Tpo" "$(DEPDIR)/qextmdichildarea.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildarea.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildarea.cpp' object='qextmdichildarea.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildarea.Po' tmpdepfile='$(DEPDIR)/qextmdichildarea.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildarea.obj `if test -f 'qextmdi/qextmdichildarea.cpp'; then $(CYGPATH_W) 'qextmdi/qextmdichildarea.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmdichildarea.cpp'; fi`

qextmdichildarea.lo: qextmdi/qextmdichildarea.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildarea.lo -MD -MP -MF "$(DEPDIR)/qextmdichildarea.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildarea.lo `test -f 'qextmdi/qextmdichildarea.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildarea.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildarea.Tpo" "$(DEPDIR)/qextmdichildarea.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildarea.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildarea.cpp' object='qextmdichildarea.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildarea.Plo' tmpdepfile='$(DEPDIR)/qextmdichildarea.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildarea.lo `test -f 'qextmdi/qextmdichildarea.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildarea.cpp

qextmdichildfrm.o: qextmdi/qextmdichildfrm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildfrm.o -MD -MP -MF "$(DEPDIR)/qextmdichildfrm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildfrm.o `test -f 'qextmdi/qextmdichildfrm.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildfrm.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildfrm.Tpo" "$(DEPDIR)/qextmdichildfrm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildfrm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildfrm.cpp' object='qextmdichildfrm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildfrm.Po' tmpdepfile='$(DEPDIR)/qextmdichildfrm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildfrm.o `test -f 'qextmdi/qextmdichildfrm.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildfrm.cpp

qextmdichildfrm.obj: qextmdi/qextmdichildfrm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildfrm.obj -MD -MP -MF "$(DEPDIR)/qextmdichildfrm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildfrm.obj `if test -f 'qextmdi/qextmdichildfrm.cpp'; then $(CYGPATH_W) 'qextmdi/qextmdichildfrm.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmdichildfrm.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildfrm.Tpo" "$(DEPDIR)/qextmdichildfrm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildfrm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildfrm.cpp' object='qextmdichildfrm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildfrm.Po' tmpdepfile='$(DEPDIR)/qextmdichildfrm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildfrm.obj `if test -f 'qextmdi/qextmdichildfrm.cpp'; then $(CYGPATH_W) 'qextmdi/qextmdichildfrm.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmdichildfrm.cpp'; fi`

qextmdichildfrm.lo: qextmdi/qextmdichildfrm.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildfrm.lo -MD -MP -MF "$(DEPDIR)/qextmdichildfrm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildfrm.lo `test -f 'qextmdi/qextmdichildfrm.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildfrm.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildfrm.Tpo" "$(DEPDIR)/qextmdichildfrm.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildfrm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildfrm.cpp' object='qextmdichildfrm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildfrm.Plo' tmpdepfile='$(DEPDIR)/qextmdichildfrm.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildfrm.lo `test -f 'qextmdi/qextmdichildfrm.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildfrm.cpp

qextmdichildfrmcaption.o: qextmdi/qextmdichildfrmcaption.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildfrmcaption.o -MD -MP -MF "$(DEPDIR)/qextmdichildfrmcaption.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildfrmcaption.o `test -f 'qextmdi/qextmdichildfrmcaption.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildfrmcaption.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildfrmcaption.Tpo" "$(DEPDIR)/qextmdichildfrmcaption.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildfrmcaption.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildfrmcaption.cpp' object='qextmdichildfrmcaption.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildfrmcaption.Po' tmpdepfile='$(DEPDIR)/qextmdichildfrmcaption.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildfrmcaption.o `test -f 'qextmdi/qextmdichildfrmcaption.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildfrmcaption.cpp

qextmdichildfrmcaption.obj: qextmdi/qextmdichildfrmcaption.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildfrmcaption.obj -MD -MP -MF "$(DEPDIR)/qextmdichildfrmcaption.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildfrmcaption.obj `if test -f 'qextmdi/qextmdichildfrmcaption.cpp'; then $(CYGPATH_W) 'qextmdi/qextmdichildfrmcaption.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmdichildfrmcaption.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildfrmcaption.Tpo" "$(DEPDIR)/qextmdichildfrmcaption.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildfrmcaption.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildfrmcaption.cpp' object='qextmdichildfrmcaption.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildfrmcaption.Po' tmpdepfile='$(DEPDIR)/qextmdichildfrmcaption.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildfrmcaption.obj `if test -f 'qextmdi/qextmdichildfrmcaption.cpp'; then $(CYGPATH_W) 'qextmdi/qextmdichildfrmcaption.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmdichildfrmcaption.cpp'; fi`

qextmdichildfrmcaption.lo: qextmdi/qextmdichildfrmcaption.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildfrmcaption.lo -MD -MP -MF "$(DEPDIR)/qextmdichildfrmcaption.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildfrmcaption.lo `test -f 'qextmdi/qextmdichildfrmcaption.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildfrmcaption.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildfrmcaption.Tpo" "$(DEPDIR)/qextmdichildfrmcaption.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildfrmcaption.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildfrmcaption.cpp' object='qextmdichildfrmcaption.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildfrmcaption.Plo' tmpdepfile='$(DEPDIR)/qextmdichildfrmcaption.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildfrmcaption.lo `test -f 'qextmdi/qextmdichildfrmcaption.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildfrmcaption.cpp

qextmdichildview.o: qextmdi/qextmdichildview.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildview.o -MD -MP -MF "$(DEPDIR)/qextmdichildview.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildview.o `test -f 'qextmdi/qextmdichildview.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildview.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildview.Tpo" "$(DEPDIR)/qextmdichildview.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildview.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildview.cpp' object='qextmdichildview.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildview.Po' tmpdepfile='$(DEPDIR)/qextmdichildview.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildview.o `test -f 'qextmdi/qextmdichildview.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildview.cpp

qextmdichildview.obj: qextmdi/qextmdichildview.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildview.obj -MD -MP -MF "$(DEPDIR)/qextmdichildview.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildview.obj `if test -f 'qextmdi/qextmdichildview.cpp'; then $(CYGPATH_W) 'qextmdi/qextmdichildview.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmdichildview.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildview.Tpo" "$(DEPDIR)/qextmdichildview.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildview.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildview.cpp' object='qextmdichildview.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildview.Po' tmpdepfile='$(DEPDIR)/qextmdichildview.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildview.obj `if test -f 'qextmdi/qextmdichildview.cpp'; then $(CYGPATH_W) 'qextmdi/qextmdichildview.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmdichildview.cpp'; fi`

qextmdichildview.lo: qextmdi/qextmdichildview.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdichildview.lo -MD -MP -MF "$(DEPDIR)/qextmdichildview.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdichildview.lo `test -f 'qextmdi/qextmdichildview.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildview.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdichildview.Tpo" "$(DEPDIR)/qextmdichildview.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdichildview.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdichildview.cpp' object='qextmdichildview.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdichildview.Plo' tmpdepfile='$(DEPDIR)/qextmdichildview.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdichildview.lo `test -f 'qextmdi/qextmdichildview.cpp' || echo '$(srcdir)/'`qextmdi/qextmdichildview.cpp

qextmdimainfrm.o: qextmdi/qextmdimainfrm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdimainfrm.o -MD -MP -MF "$(DEPDIR)/qextmdimainfrm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdimainfrm.o `test -f 'qextmdi/qextmdimainfrm.cpp' || echo '$(srcdir)/'`qextmdi/qextmdimainfrm.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdimainfrm.Tpo" "$(DEPDIR)/qextmdimainfrm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdimainfrm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdimainfrm.cpp' object='qextmdimainfrm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdimainfrm.Po' tmpdepfile='$(DEPDIR)/qextmdimainfrm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdimainfrm.o `test -f 'qextmdi/qextmdimainfrm.cpp' || echo '$(srcdir)/'`qextmdi/qextmdimainfrm.cpp

qextmdimainfrm.obj: qextmdi/qextmdimainfrm.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdimainfrm.obj -MD -MP -MF "$(DEPDIR)/qextmdimainfrm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdimainfrm.obj `if test -f 'qextmdi/qextmdimainfrm.cpp'; then $(CYGPATH_W) 'qextmdi/qextmdimainfrm.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmdimainfrm.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdimainfrm.Tpo" "$(DEPDIR)/qextmdimainfrm.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdimainfrm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdimainfrm.cpp' object='qextmdimainfrm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdimainfrm.Po' tmpdepfile='$(DEPDIR)/qextmdimainfrm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdimainfrm.obj `if test -f 'qextmdi/qextmdimainfrm.cpp'; then $(CYGPATH_W) 'qextmdi/qextmdimainfrm.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmdimainfrm.cpp'; fi`

qextmdimainfrm.lo: qextmdi/qextmdimainfrm.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmdimainfrm.lo -MD -MP -MF "$(DEPDIR)/qextmdimainfrm.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmdimainfrm.lo `test -f 'qextmdi/qextmdimainfrm.cpp' || echo '$(srcdir)/'`qextmdi/qextmdimainfrm.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmdimainfrm.Tpo" "$(DEPDIR)/qextmdimainfrm.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmdimainfrm.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmdimainfrm.cpp' object='qextmdimainfrm.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmdimainfrm.Plo' tmpdepfile='$(DEPDIR)/qextmdimainfrm.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmdimainfrm.lo `test -f 'qextmdi/qextmdimainfrm.cpp' || echo '$(srcdir)/'`qextmdi/qextmdimainfrm.cpp

qextmditaskbar.o: qextmdi/qextmditaskbar.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmditaskbar.o -MD -MP -MF "$(DEPDIR)/qextmditaskbar.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmditaskbar.o `test -f 'qextmdi/qextmditaskbar.cpp' || echo '$(srcdir)/'`qextmdi/qextmditaskbar.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmditaskbar.Tpo" "$(DEPDIR)/qextmditaskbar.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmditaskbar.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmditaskbar.cpp' object='qextmditaskbar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmditaskbar.Po' tmpdepfile='$(DEPDIR)/qextmditaskbar.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmditaskbar.o `test -f 'qextmdi/qextmditaskbar.cpp' || echo '$(srcdir)/'`qextmdi/qextmditaskbar.cpp

qextmditaskbar.obj: qextmdi/qextmditaskbar.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmditaskbar.obj -MD -MP -MF "$(DEPDIR)/qextmditaskbar.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmditaskbar.obj `if test -f 'qextmdi/qextmditaskbar.cpp'; then $(CYGPATH_W) 'qextmdi/qextmditaskbar.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmditaskbar.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmditaskbar.Tpo" "$(DEPDIR)/qextmditaskbar.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmditaskbar.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmditaskbar.cpp' object='qextmditaskbar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmditaskbar.Po' tmpdepfile='$(DEPDIR)/qextmditaskbar.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmditaskbar.obj `if test -f 'qextmdi/qextmditaskbar.cpp'; then $(CYGPATH_W) 'qextmdi/qextmditaskbar.cpp'; else $(CYGPATH_W) '$(srcdir)/qextmdi/qextmditaskbar.cpp'; fi`

qextmditaskbar.lo: qextmdi/qextmditaskbar.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qextmditaskbar.lo -MD -MP -MF "$(DEPDIR)/qextmditaskbar.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o qextmditaskbar.lo `test -f 'qextmdi/qextmditaskbar.cpp' || echo '$(srcdir)/'`qextmdi/qextmditaskbar.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/qextmditaskbar.Tpo" "$(DEPDIR)/qextmditaskbar.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/qextmditaskbar.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qextmdi/qextmditaskbar.cpp' object='qextmditaskbar.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/qextmditaskbar.Plo' tmpdepfile='$(DEPDIR)/qextmditaskbar.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qextmditaskbar.lo `test -f 'qextmdi/qextmditaskbar.cpp' || echo '$(srcdir)/'`qextmdi/qextmditaskbar.cpp

SoBrepShape.o: Inventor/OCC/SoBrepShape.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoBrepShape.o -MD -MP -MF "$(DEPDIR)/SoBrepShape.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SoBrepShape.o `test -f 'Inventor/OCC/SoBrepShape.cpp' || echo '$(srcdir)/'`Inventor/OCC/SoBrepShape.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SoBrepShape.Tpo" "$(DEPDIR)/SoBrepShape.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SoBrepShape.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Inventor/OCC/SoBrepShape.cpp' object='SoBrepShape.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoBrepShape.Po' tmpdepfile='$(DEPDIR)/SoBrepShape.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoBrepShape.o `test -f 'Inventor/OCC/SoBrepShape.cpp' || echo '$(srcdir)/'`Inventor/OCC/SoBrepShape.cpp

SoBrepShape.obj: Inventor/OCC/SoBrepShape.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoBrepShape.obj -MD -MP -MF "$(DEPDIR)/SoBrepShape.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SoBrepShape.obj `if test -f 'Inventor/OCC/SoBrepShape.cpp'; then $(CYGPATH_W) 'Inventor/OCC/SoBrepShape.cpp'; else $(CYGPATH_W) '$(srcdir)/Inventor/OCC/SoBrepShape.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SoBrepShape.Tpo" "$(DEPDIR)/SoBrepShape.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SoBrepShape.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Inventor/OCC/SoBrepShape.cpp' object='SoBrepShape.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoBrepShape.Po' tmpdepfile='$(DEPDIR)/SoBrepShape.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoBrepShape.obj `if test -f 'Inventor/OCC/SoBrepShape.cpp'; then $(CYGPATH_W) 'Inventor/OCC/SoBrepShape.cpp'; else $(CYGPATH_W) '$(srcdir)/Inventor/OCC/SoBrepShape.cpp'; fi`

SoBrepShape.lo: Inventor/OCC/SoBrepShape.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SoBrepShape.lo -MD -MP -MF "$(DEPDIR)/SoBrepShape.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SoBrepShape.lo `test -f 'Inventor/OCC/SoBrepShape.cpp' || echo '$(srcdir)/'`Inventor/OCC/SoBrepShape.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/SoBrepShape.Tpo" "$(DEPDIR)/SoBrepShape.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SoBrepShape.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Inventor/OCC/SoBrepShape.cpp' object='SoBrepShape.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SoBrepShape.Plo' tmpdepfile='$(DEPDIR)/SoBrepShape.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SoBrepShape.lo `test -f 'Inventor/OCC/SoBrepShape.cpp' || echo '$(srcdir)/'`Inventor/OCC/SoBrepShape.cpp

LanguageFactory.o: Language/LanguageFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LanguageFactory.o -MD -MP -MF "$(DEPDIR)/LanguageFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LanguageFactory.o `test -f 'Language/LanguageFactory.cpp' || echo '$(srcdir)/'`Language/LanguageFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LanguageFactory.Tpo" "$(DEPDIR)/LanguageFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LanguageFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Language/LanguageFactory.cpp' object='LanguageFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LanguageFactory.Po' tmpdepfile='$(DEPDIR)/LanguageFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LanguageFactory.o `test -f 'Language/LanguageFactory.cpp' || echo '$(srcdir)/'`Language/LanguageFactory.cpp

LanguageFactory.obj: Language/LanguageFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LanguageFactory.obj -MD -MP -MF "$(DEPDIR)/LanguageFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LanguageFactory.obj `if test -f 'Language/LanguageFactory.cpp'; then $(CYGPATH_W) 'Language/LanguageFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/Language/LanguageFactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LanguageFactory.Tpo" "$(DEPDIR)/LanguageFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LanguageFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Language/LanguageFactory.cpp' object='LanguageFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LanguageFactory.Po' tmpdepfile='$(DEPDIR)/LanguageFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LanguageFactory.obj `if test -f 'Language/LanguageFactory.cpp'; then $(CYGPATH_W) 'Language/LanguageFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/Language/LanguageFactory.cpp'; fi`

LanguageFactory.lo: Language/LanguageFactory.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LanguageFactory.lo -MD -MP -MF "$(DEPDIR)/LanguageFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o LanguageFactory.lo `test -f 'Language/LanguageFactory.cpp' || echo '$(srcdir)/'`Language/LanguageFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv "$(DEPDIR)/LanguageFactory.Tpo" "$(DEPDIR)/LanguageFactory.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/LanguageFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Language/LanguageFactory.cpp' object='LanguageFactory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/LanguageFactory.Plo' tmpdepfile='$(DEPDIR)/LanguageFactory.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LanguageFactory.lo `test -f 'Language/LanguageFactory.cpp' || echo '$(srcdir)/'`Language/LanguageFactory.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(pkglibdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-pkglibLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-pkglibLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-pkglibLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-pkglibLTLIBRARIES ctags distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-pkglibLTLIBRARIES install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-pkglibLTLIBRARIES


# rule for Qt MetaObject Compiler:
moc_%.cpp: %.h
	cd $(@D) && $(MOC) $(<F) -o $(@F)

# rule for Qt MetaObject Compiler:
%.moc: %.h
	cd $(@D) && $(MOC) $(<F) -o $(@F)

# rules for Qt User Interface Compiler:
# (it adds path to #include automatically, so cd before calling it)
%.h: %.ui
	cd $(@D) && $(UIC) $(<F) -o $(@F)
%.cpp: %.h %.ui
	cd $(@D) && $(UIC) -o $(@F) -impl $(*F).h $(*F).ui

# rule for translation files using python script :
%.h: %.ts
	cd $(@D) && $(PYTHON) ../../Tools/tstocpp.py $(<F)  $(@F) $(*F)

%Script.h: FreeCAD%.py
	$(PYTHON) ../Tools/PythonToCPP.py $(<F) $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
